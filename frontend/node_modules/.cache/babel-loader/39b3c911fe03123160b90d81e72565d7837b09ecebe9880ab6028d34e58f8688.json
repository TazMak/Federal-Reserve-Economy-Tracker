{"ast":null,"code":"var _jsxFileName = \"/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/RegionalData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\n\n// United States GeoJSON\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n/**\n * RegionalData component for displaying economic data by state on an interactive map\n */\nconst RegionalData = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hoveredState, setHoveredState] = useState(null);\n  const [selectedIndicator, setSelectedIndicator] = useState('MSPUS'); // Default to Median House Price\n  const [stateColors, setStateColors] = useState({});\n  const [allStatesData, setAllStatesData] = useState({});\n\n  // Available indicators\n  const indicators = [{\n    id: 'UNRATE',\n    name: 'Unemployment Rate'\n  }, {\n    id: 'MSPUS',\n    name: 'Median House Price'\n  }, {\n    id: 'PCPI',\n    name: 'Per Capita Personal Income'\n  }];\n\n  // Fetch data for all states\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/api/regional/${selectedIndicator}`);\n\n        // Process data for map coloring\n        const stateData = {};\n        const colorData = {};\n\n        // Get min/max values for normalization\n        const values = response.data.states.filter(state => state.value !== null && state.value !== undefined).map(state => state.value);\n        const minValue = Math.min(...values);\n        const maxValue = Math.max(...values);\n        const valueRange = maxValue - minValue;\n\n        // Process each state\n        response.data.states.forEach(state => {\n          // Store the state data\n          stateData[state.code] = state;\n\n          // Calculate color\n          if (state.value !== null && state.value !== undefined) {\n            // Normalize value between 0 and 1\n            const normalizedValue = (state.value - minValue) / valueRange;\n\n            // Generate color based on indicator\n            let color;\n            if (selectedIndicator === 'UNRATE') {\n              // For unemployment, red is high (bad), green is low (good)\n              const r = Math.floor(normalizedValue * 255);\n              const g = Math.floor((1 - normalizedValue) * 255);\n              color = `rgb(${r}, ${g}, 0)`;\n            } else {\n              // For income/housing prices, green is high (good), red is low (bad)\n              const r = Math.floor((1 - normalizedValue) * 255);\n              const g = Math.floor(normalizedValue * 255);\n              color = `rgb(${r}, ${g}, 0)`;\n            }\n            colorData[state.code] = {\n              color,\n              value: state.value\n            };\n          } else {\n            colorData[state.code] = {\n              color: '#D3D3D3',\n              value: null\n            }; // Gray for no data\n          }\n        });\n        setAllStatesData(stateData);\n        setStateColors(colorData);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching regional data:', err);\n        setError('Failed to load regional data');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [selectedIndicator]);\n\n  // Handle indicator change\n  const handleIndicatorChange = e => {\n    setSelectedIndicator(e.target.value);\n  };\n\n  // Format value based on indicator type\n  const formatValue = (value, indicator) => {\n    if (value === null || value === undefined) return 'No data available';\n    switch (indicator) {\n      case 'UNRATE':\n        return `${value.toFixed(1)}%`;\n      case 'MSPUS':\n        return `$${value.toLocaleString()}.00`;\n      case 'PCPI':\n        return `$${value.toLocaleString()}.00`;\n      default:\n        return value.toLocaleString();\n    }\n  };\n\n  // Get indicator friendly name\n  const getIndicatorName = indicator => {\n    const ind = indicators.find(i => i.id === indicator);\n    return ind ? ind.name : indicator;\n  };\n\n  // Show hovered state info\n  const renderStateInfo = () => {\n    if (!hoveredState || !allStatesData[hoveredState]) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"default-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Hover over a state to view details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Currently displaying: \", getIndicatorName(selectedIndicator)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n    }\n    const state = allStatesData[hoveredState];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: getIndicatorName(selectedIndicator)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatValue(state.value, selectedIndicator)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-date\",\n          children: [\"As of \", state.date || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"economic-overview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Economic Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: state.overview || `${state.name}'s ${selectedIndicator === 'UNRATE' ? 'unemployment rate' : selectedIndicator === 'MSPUS' ? 'housing market' : 'personal income'} \n              shows ${state.value !== null ? selectedIndicator === 'UNRATE' ? state.value < 4 ? 'strong performance' : state.value < 6 ? 'moderate performance' : 'challenges' : selectedIndicator === 'MSPUS' ? state.value > 400000 ? 'high prices' : 'moderate prices' : state.value > 60000 ? 'high income levels' : 'moderate income levels' : 'no data available'}.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regional-data indicator-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Regional Economic Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"indicator-select\",\n          children: \"Select Indicator: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"indicator-select\",\n          value: selectedIndicator,\n          onChange: handleIndicatorChange,\n          children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: indicator.id,\n            children: indicator.name\n          }, indicator.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading regional data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regional-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-and-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"us-map-container\",\n          children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n            projection: \"geoAlbersUsa\",\n            children: /*#__PURE__*/_jsxDEV(Geographies, {\n              geography: geoUrl,\n              children: ({\n                geographies\n              }) => geographies.map(geo => {\n                const stateCode = geo.properties.STUSPS;\n                const stateColor = stateColors[stateCode] ? stateColors[stateCode].color : '#D3D3D3';\n                return /*#__PURE__*/_jsxDEV(Geography, {\n                  geography: geo,\n                  fill: stateColor,\n                  stroke: \"#FFFFFF\",\n                  strokeWidth: 0.5,\n                  style: {\n                    default: {\n                      outline: \"none\"\n                    },\n                    hover: {\n                      outline: \"none\",\n                      stroke: \"#333\",\n                      strokeWidth: 1.5\n                    },\n                    pressed: {\n                      outline: \"none\"\n                    }\n                  },\n                  onMouseEnter: () => {\n                    setHoveredState(stateCode);\n                  },\n                  onMouseLeave: () => {\n                    setHoveredState(null);\n                  }\n                }, geo.rsmKey, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"state-info-panel\",\n          children: renderStateInfo()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Legend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [selectedIndicator === 'UNRATE' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                background: 'rgb(0, 255, 0)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Low Unemployment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                background: 'rgb(255, 0, 0)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"High Unemployment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                background: 'rgb(0, 255, 0)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"High \", selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                background: 'rgb(255, 0, 0)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Low \", selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              background: '#D3D3D3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionalData, \"im65ye3mr12PBvQKlKXaVFyrJoU=\");\n_c = RegionalData;\nexport default RegionalData;\nvar _c;\n$RefreshReg$(_c, \"RegionalData\");","map":{"version":3,"names":["React","useState","useEffect","axios","ComposableMap","Geographies","Geography","jsxDEV","_jsxDEV","Fragment","_Fragment","geoUrl","RegionalData","_s","loading","setLoading","error","setError","hoveredState","setHoveredState","selectedIndicator","setSelectedIndicator","stateColors","setStateColors","allStatesData","setAllStatesData","indicators","id","name","fetchData","response","get","stateData","colorData","values","data","states","filter","state","value","undefined","map","minValue","Math","min","maxValue","max","valueRange","forEach","code","normalizedValue","color","r","floor","g","err","console","handleIndicatorChange","e","target","formatValue","indicator","toFixed","toLocaleString","getIndicatorName","ind","find","i","renderStateInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","date","overview","htmlFor","onChange","projection","geography","geographies","geo","stateCode","properties","STUSPS","stateColor","fill","stroke","strokeWidth","style","default","outline","hover","pressed","onMouseEnter","onMouseLeave","rsmKey","background","_c","$RefreshReg$"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/RegionalData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\n\n// United States GeoJSON\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n/**\n * RegionalData component for displaying economic data by state on an interactive map\n */\nconst RegionalData = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hoveredState, setHoveredState] = useState(null);\n  const [selectedIndicator, setSelectedIndicator] = useState('MSPUS'); // Default to Median House Price\n  const [stateColors, setStateColors] = useState({});\n  const [allStatesData, setAllStatesData] = useState({});\n\n  // Available indicators\n  const indicators = [\n    { id: 'UNRATE', name: 'Unemployment Rate' },\n    { id: 'MSPUS', name: 'Median House Price' },\n    { id: 'PCPI', name: 'Per Capita Personal Income' }\n  ];\n\n  // Fetch data for all states\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/api/regional/${selectedIndicator}`);\n        \n        // Process data for map coloring\n        const stateData = {};\n        const colorData = {};\n        \n        // Get min/max values for normalization\n        const values = response.data.states\n          .filter(state => state.value !== null && state.value !== undefined)\n          .map(state => state.value);\n        \n        const minValue = Math.min(...values);\n        const maxValue = Math.max(...values);\n        const valueRange = maxValue - minValue;\n        \n        // Process each state\n        response.data.states.forEach(state => {\n          // Store the state data\n          stateData[state.code] = state;\n          \n          // Calculate color\n          if (state.value !== null && state.value !== undefined) {\n            // Normalize value between 0 and 1\n            const normalizedValue = (state.value - minValue) / valueRange;\n            \n            // Generate color based on indicator\n            let color;\n            if (selectedIndicator === 'UNRATE') {\n              // For unemployment, red is high (bad), green is low (good)\n              const r = Math.floor(normalizedValue * 255);\n              const g = Math.floor((1 - normalizedValue) * 255);\n              color = `rgb(${r}, ${g}, 0)`;\n            } else {\n              // For income/housing prices, green is high (good), red is low (bad)\n              const r = Math.floor((1 - normalizedValue) * 255);\n              const g = Math.floor(normalizedValue * 255);\n              color = `rgb(${r}, ${g}, 0)`;\n            }\n            \n            colorData[state.code] = { color, value: state.value };\n          } else {\n            colorData[state.code] = { color: '#D3D3D3', value: null }; // Gray for no data\n          }\n        });\n        \n        setAllStatesData(stateData);\n        setStateColors(colorData);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching regional data:', err);\n        setError('Failed to load regional data');\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [selectedIndicator]);\n\n  // Handle indicator change\n  const handleIndicatorChange = (e) => {\n    setSelectedIndicator(e.target.value);\n  };\n\n  // Format value based on indicator type\n  const formatValue = (value, indicator) => {\n    if (value === null || value === undefined) return 'No data available';\n    \n    switch (indicator) {\n      case 'UNRATE':\n        return `${value.toFixed(1)}%`;\n      case 'MSPUS':\n        return `$${value.toLocaleString()}.00`;\n      case 'PCPI':\n        return `$${value.toLocaleString()}.00`;\n      default:\n        return value.toLocaleString();\n    }\n  };\n\n  // Get indicator friendly name\n  const getIndicatorName = (indicator) => {\n    const ind = indicators.find(i => i.id === indicator);\n    return ind ? ind.name : indicator;\n  };\n  \n  // Show hovered state info\n  const renderStateInfo = () => {\n    if (!hoveredState || !allStatesData[hoveredState]) {\n      return (\n        <div className=\"default-info\">\n          <h3>Hover over a state to view details</h3>\n          <p>Currently displaying: {getIndicatorName(selectedIndicator)}</p>\n        </div>\n      );\n    }\n    \n    const state = allStatesData[hoveredState];\n    \n    return (\n      <div className=\"state-details\">\n        <h3>{state.name}</h3>\n        <div className=\"state-metric\">\n          <h4>{getIndicatorName(selectedIndicator)}</h4>\n          <div className=\"metric-value\">\n            {formatValue(state.value, selectedIndicator)}\n          </div>\n          <div className=\"metric-date\">\n            As of {state.date || 'N/A'}\n          </div>\n        </div>\n        <div className=\"economic-overview\">\n          <h4>Economic Overview</h4>\n          <p>\n            {state.overview || \n              `${state.name}'s ${selectedIndicator === 'UNRATE' ? 'unemployment rate' : \n                selectedIndicator === 'MSPUS' ? 'housing market' : 'personal income'} \n              shows ${state.value !== null ? \n                selectedIndicator === 'UNRATE' ? \n                  state.value < 4 ? 'strong performance' : \n                  state.value < 6 ? 'moderate performance' : 'challenges' : \n                selectedIndicator === 'MSPUS' ? \n                  state.value > 400000 ? 'high prices' : 'moderate prices' : \n                  state.value > 60000 ? 'high income levels' : 'moderate income levels' \n                : 'no data available'}.`}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"regional-data indicator-page\">\n      <h2>Regional Economic Data</h2>\n      \n      <div className=\"controls\">\n        <div className=\"selector\">\n          <label htmlFor=\"indicator-select\">Select Indicator: </label>\n          <select \n            id=\"indicator-select\" \n            value={selectedIndicator} \n            onChange={handleIndicatorChange}\n          >\n            {indicators.map(indicator => (\n              <option key={indicator.id} value={indicator.id}>\n                {indicator.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      \n      {loading ? (\n        <div className=\"loading\">Loading regional data...</div>\n      ) : error ? (\n        <div className=\"error\">{error}</div>\n      ) : (\n        <div className=\"regional-content\">\n          <div className=\"map-and-details\">\n            <div className=\"us-map-container\">\n              <ComposableMap projection=\"geoAlbersUsa\">\n                <Geographies geography={geoUrl}>\n                  {({ geographies }) => \n                    geographies.map(geo => {\n                      const stateCode = geo.properties.STUSPS;\n                      const stateColor = stateColors[stateCode] \n                        ? stateColors[stateCode].color \n                        : '#D3D3D3';\n                      \n                      return (\n                        <Geography\n                          key={geo.rsmKey}\n                          geography={geo}\n                          fill={stateColor}\n                          stroke=\"#FFFFFF\"\n                          strokeWidth={0.5}\n                          style={{\n                            default: { outline: \"none\" },\n                            hover: { \n                              outline: \"none\", \n                              stroke: \"#333\",\n                              strokeWidth: 1.5\n                            },\n                            pressed: { outline: \"none\" },\n                          }}\n                          onMouseEnter={() => {\n                            setHoveredState(stateCode);\n                          }}\n                          onMouseLeave={() => {\n                            setHoveredState(null);\n                          }}\n                        />\n                      );\n                    })\n                  }\n                </Geographies>\n              </ComposableMap>\n            </div>\n            <div className=\"state-info-panel\">\n              {renderStateInfo()}\n            </div>\n          </div>\n          \n          <div className=\"legend\">\n            <h3>Legend</h3>\n            <div className=\"legend-item\">\n              {selectedIndicator === 'UNRATE' ? (\n                <>\n                  <div className=\"legend-color\" style={{ background: 'rgb(0, 255, 0)' }}></div>\n                  <span>Low Unemployment</span>\n                  <div className=\"legend-color\" style={{ background: 'rgb(255, 0, 0)' }}></div>\n                  <span>High Unemployment</span>\n                </>\n              ) : (\n                <>\n                  <div className=\"legend-color\" style={{ background: 'rgb(0, 255, 0)' }}></div>\n                  <span>High {selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income'}</span>\n                  <div className=\"legend-color\" style={{ background: 'rgb(255, 0, 0)' }}></div>\n                  <span>Low {selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income'}</span>\n                </>\n              )}\n              <div className=\"legend-color\" style={{ background: '#D3D3D3' }}></div>\n              <span>No Data</span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RegionalData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}