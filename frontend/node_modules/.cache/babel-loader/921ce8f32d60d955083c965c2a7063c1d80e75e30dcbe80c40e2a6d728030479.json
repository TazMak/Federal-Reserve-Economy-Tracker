{"ast":null,"code":"var _jsxFileName = \"/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/RegionalData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\n\n// United States GeoJSON\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n/**\n * RegionalData component for displaying economic data by state on an interactive map\n */\nconst RegionalData = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hoveredState, setHoveredState] = useState(null);\n  const [selectedIndicator, setSelectedIndicator] = useState('MSPUS'); // Default to Median House Price\n  const [stateData, setStateData] = useState({});\n  const [colorScale, setColorScale] = useState(() => scaleQuantile().domain([0, 1]).range([]));\n\n  // Available indicators\n  const indicators = [{\n    id: 'UNRATE',\n    name: 'Unemployment Rate'\n  }, {\n    id: 'MSPUS',\n    name: 'Median House Price'\n  }, {\n    id: 'PCPI',\n    name: 'Per Capita Personal Income'\n  }];\n\n  // Handle indicator change\n  const handleIndicatorChange = e => {\n    setSelectedIndicator(e.target.value);\n  };\n\n  // Fetch data for all states\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/api/regional/${selectedIndicator}`);\n\n        // Process data for map coloring\n        const dataMap = {};\n\n        // Get values for color scale\n        const values = response.data.states.filter(state => state.value !== null && state.value !== undefined).map(state => state.value);\n\n        // Create color scale\n        let scale;\n        if (selectedIndicator === 'UNRATE') {\n          // For unemployment: lower values are better (green), higher values are worse (red)\n          scale = scaleQuantile().domain(values).range([\"#e8f5e9\", \"#c8e6c9\", \"#a5d6a7\", \"#81c784\", \"#66bb6a\", \"#4caf50\", \"#43a047\", \"#388e3c\", \"#2e7d32\", \"#1b5e20\"].reverse()); // reverse to make red for high values\n        } else {\n          // For income/housing prices: higher values are better (green), lower values are worse (red)\n          scale = scaleQuantile().domain(values).range([\"#e8f5e9\", \"#c8e6c9\", \"#a5d6a7\", \"#81c784\", \"#66bb6a\", \"#4caf50\", \"#43a047\", \"#388e3c\", \"#2e7d32\", \"#1b5e20\"]);\n        }\n        setColorScale(scale);\n\n        // Process each state\n        response.data.states.forEach(state => {\n          dataMap[state.code] = state;\n        });\n        setStateData(dataMap);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching regional data:', err);\n        setError('Failed to load regional data');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [selectedIndicator]);\n\n  // Format value based on indicator type\n  const formatValue = (value, indicator) => {\n    if (value === null || value === undefined) return 'No data available';\n    switch (indicator) {\n      case 'UNRATE':\n        return `${value.toFixed(1)}%`;\n      case 'MSPUS':\n        return `$${value.toLocaleString()}.00`;\n      case 'PCPI':\n        return `$${value.toLocaleString()}.00`;\n      default:\n        return value.toLocaleString();\n    }\n  };\n\n  // Get indicator friendly name\n  const getIndicatorName = indicator => {\n    const ind = indicators.find(i => i.id === indicator);\n    return ind ? ind.name : indicator;\n  };\n\n  // Show hovered state info\n  const renderStateInfo = () => {\n    if (!hoveredState || !stateData[hoveredState]) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"default-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Hover over a state to view details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Currently displaying: \", getIndicatorName(selectedIndicator)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this);\n    }\n    const state = stateData[hoveredState];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: getIndicatorName(selectedIndicator)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatValue(state.value, selectedIndicator)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-date\",\n          children: [\"As of \", state.date || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"economic-overview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Economic Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: state.overview || `${state.name}'s ${selectedIndicator === 'UNRATE' ? 'unemployment rate' : selectedIndicator === 'MSPUS' ? 'housing market' : 'personal income'} \n              shows ${state.value !== null ? selectedIndicator === 'UNRATE' ? state.value < 4 ? 'strong performance' : state.value < 6 ? 'moderate performance' : 'challenges' : selectedIndicator === 'MSPUS' ? state.value > 400000 ? 'high prices' : 'moderate prices' : state.value > 60000 ? 'high income levels' : 'moderate income levels' : 'no data available'}.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regional-data indicator-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Regional Economic Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"indicator-select\",\n          children: \"Select Indicator: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"indicator-select\",\n          value: selectedIndicator,\n          onChange: handleIndicatorChange,\n          children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: indicator.id,\n            children: indicator.name\n          }, indicator.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading regional data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regional-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-and-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"us-map-container\",\n          children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n            projection: \"geoAlbersUsa\",\n            \"data-tip\": \"\",\n            children: /*#__PURE__*/_jsxDEV(Geographies, {\n              geography: geoUrl,\n              children: ({\n                geographies\n              }) => geographies.map(geo => {\n                const stateCode = geo.properties.STUSPS;\n                const stateInfo = stateData[stateCode];\n                const hasData = stateInfo && stateInfo.value !== null && stateInfo.value !== undefined;\n                return /*#__PURE__*/_jsxDEV(Geography, {\n                  geography: geo,\n                  fill: hasData ? colorScale(stateInfo.value) : \"#D3D3D3\",\n                  stroke: \"#FFFFFF\",\n                  strokeWidth: 0.5,\n                  style: {\n                    default: {\n                      outline: \"none\"\n                    },\n                    hover: {\n                      outline: \"none\",\n                      fill: \"#999\"\n                    },\n                    pressed: {\n                      outline: \"none\"\n                    }\n                  },\n                  onMouseEnter: () => {\n                    setHoveredState(stateCode);\n                  },\n                  onMouseLeave: () => {\n                    setHoveredState(null);\n                  }\n                }, geo.rsmKey, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"state-info-panel\",\n          children: renderStateInfo()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Legend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [selectedIndicator === 'UNRATE' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                background: '#e8f5e9'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Low Unemployment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                background: '#1b5e20'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"High Unemployment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                background: '#1b5e20'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"High \", selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                background: '#e8f5e9'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Low \", selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              background: '#D3D3D3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionalData, \"lqgCWM2HDCB/+/GS8eIffaPT8v4=\");\n_c = RegionalData;\nexport default RegionalData;\nvar _c;\n$RefreshReg$(_c, \"RegionalData\");","map":{"version":3,"names":["React","useState","useEffect","axios","ComposableMap","Geographies","Geography","scaleQuantile","jsxDEV","_jsxDEV","Fragment","_Fragment","geoUrl","RegionalData","_s","loading","setLoading","error","setError","hoveredState","setHoveredState","selectedIndicator","setSelectedIndicator","stateData","setStateData","colorScale","setColorScale","domain","range","indicators","id","name","handleIndicatorChange","e","target","value","fetchData","response","get","dataMap","values","data","states","filter","state","undefined","map","scale","reverse","forEach","code","err","console","formatValue","indicator","toFixed","toLocaleString","getIndicatorName","ind","find","i","renderStateInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","date","overview","htmlFor","onChange","projection","geography","geographies","geo","stateCode","properties","STUSPS","stateInfo","hasData","fill","stroke","strokeWidth","style","default","outline","hover","pressed","onMouseEnter","onMouseLeave","rsmKey","background","_c","$RefreshReg$"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/RegionalData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\n\n// United States GeoJSON\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n/**\n * RegionalData component for displaying economic data by state on an interactive map\n */\nconst RegionalData = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hoveredState, setHoveredState] = useState(null);\n  const [selectedIndicator, setSelectedIndicator] = useState('MSPUS'); // Default to Median House Price\n  const [stateData, setStateData] = useState({});\n  const [colorScale, setColorScale] = useState(() => scaleQuantile().domain([0, 1]).range([]));\n\n  // Available indicators\n  const indicators = [\n    { id: 'UNRATE', name: 'Unemployment Rate' },\n    { id: 'MSPUS', name: 'Median House Price' },\n    { id: 'PCPI', name: 'Per Capita Personal Income' }\n  ];\n\n  // Handle indicator change\n  const handleIndicatorChange = (e) => {\n    setSelectedIndicator(e.target.value);\n  };\n\n  // Fetch data for all states\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/api/regional/${selectedIndicator}`);\n        \n        // Process data for map coloring\n        const dataMap = {};\n        \n        // Get values for color scale\n        const values = response.data.states\n          .filter(state => state.value !== null && state.value !== undefined)\n          .map(state => state.value);\n        \n        // Create color scale\n        let scale;\n        if (selectedIndicator === 'UNRATE') {\n          // For unemployment: lower values are better (green), higher values are worse (red)\n          scale = scaleQuantile()\n            .domain(values)\n            .range([\n              \"#e8f5e9\", \"#c8e6c9\", \"#a5d6a7\", \"#81c784\", \"#66bb6a\",\n              \"#4caf50\", \"#43a047\", \"#388e3c\", \"#2e7d32\", \"#1b5e20\"\n            ].reverse()); // reverse to make red for high values\n        } else {\n          // For income/housing prices: higher values are better (green), lower values are worse (red)\n          scale = scaleQuantile()\n            .domain(values)\n            .range([\n              \"#e8f5e9\", \"#c8e6c9\", \"#a5d6a7\", \"#81c784\", \"#66bb6a\",\n              \"#4caf50\", \"#43a047\", \"#388e3c\", \"#2e7d32\", \"#1b5e20\"\n            ]);\n        }\n        \n        setColorScale(scale);\n        \n        // Process each state\n        response.data.states.forEach(state => {\n          dataMap[state.code] = state;\n        });\n        \n        setStateData(dataMap);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching regional data:', err);\n        setError('Failed to load regional data');\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [selectedIndicator]);\n\n  // Format value based on indicator type\n  const formatValue = (value, indicator) => {\n    if (value === null || value === undefined) return 'No data available';\n    \n    switch (indicator) {\n      case 'UNRATE':\n        return `${value.toFixed(1)}%`;\n      case 'MSPUS':\n        return `$${value.toLocaleString()}.00`;\n      case 'PCPI':\n        return `$${value.toLocaleString()}.00`;\n      default:\n        return value.toLocaleString();\n    }\n  };\n\n  // Get indicator friendly name\n  const getIndicatorName = (indicator) => {\n    const ind = indicators.find(i => i.id === indicator);\n    return ind ? ind.name : indicator;\n  };\n  \n  // Show hovered state info\n  const renderStateInfo = () => {\n    if (!hoveredState || !stateData[hoveredState]) {\n      return (\n        <div className=\"default-info\">\n          <h3>Hover over a state to view details</h3>\n          <p>Currently displaying: {getIndicatorName(selectedIndicator)}</p>\n        </div>\n      );\n    }\n    \n    const state = stateData[hoveredState];\n    \n    return (\n      <div className=\"state-details\">\n        <h3>{state.name}</h3>\n        <div className=\"state-metric\">\n          <h4>{getIndicatorName(selectedIndicator)}</h4>\n          <div className=\"metric-value\">\n            {formatValue(state.value, selectedIndicator)}\n          </div>\n          <div className=\"metric-date\">\n            As of {state.date || 'N/A'}\n          </div>\n        </div>\n        <div className=\"economic-overview\">\n          <h4>Economic Overview</h4>\n          <p>\n            {state.overview || \n              `${state.name}'s ${selectedIndicator === 'UNRATE' ? 'unemployment rate' : \n                selectedIndicator === 'MSPUS' ? 'housing market' : 'personal income'} \n              shows ${state.value !== null ? \n                selectedIndicator === 'UNRATE' ? \n                  state.value < 4 ? 'strong performance' : \n                  state.value < 6 ? 'moderate performance' : 'challenges' : \n                selectedIndicator === 'MSPUS' ? \n                  state.value > 400000 ? 'high prices' : 'moderate prices' : \n                  state.value > 60000 ? 'high income levels' : 'moderate income levels' \n                : 'no data available'}.`}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"regional-data indicator-page\">\n      <h2>Regional Economic Data</h2>\n      \n      <div className=\"controls\">\n        <div className=\"selector\">\n          <label htmlFor=\"indicator-select\">Select Indicator: </label>\n          <select \n            id=\"indicator-select\" \n            value={selectedIndicator} \n            onChange={handleIndicatorChange}\n          >\n            {indicators.map(indicator => (\n              <option key={indicator.id} value={indicator.id}>\n                {indicator.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      \n      {loading ? (\n        <div className=\"loading\">Loading regional data...</div>\n      ) : error ? (\n        <div className=\"error\">{error}</div>\n      ) : (\n        <div className=\"regional-content\">\n          <div className=\"map-and-details\">\n            <div className=\"us-map-container\">\n              <ComposableMap projection=\"geoAlbersUsa\" data-tip=\"\">\n                <Geographies geography={geoUrl}>\n                  {({ geographies }) => \n                    geographies.map(geo => {\n                      const stateCode = geo.properties.STUSPS;\n                      const stateInfo = stateData[stateCode];\n                      const hasData = stateInfo && stateInfo.value !== null && stateInfo.value !== undefined;\n                      \n                      return (\n                        <Geography\n                          key={geo.rsmKey}\n                          geography={geo}\n                          fill={hasData ? colorScale(stateInfo.value) : \"#D3D3D3\"}\n                          stroke=\"#FFFFFF\"\n                          strokeWidth={0.5}\n                          style={{\n                            default: { outline: \"none\" },\n                            hover: { outline: \"none\", fill: \"#999\" },\n                            pressed: { outline: \"none\" },\n                          }}\n                          onMouseEnter={() => {\n                            setHoveredState(stateCode);\n                          }}\n                          onMouseLeave={() => {\n                            setHoveredState(null);\n                          }}\n                        />\n                      );\n                    })\n                  }\n                </Geographies>\n              </ComposableMap>\n            </div>\n            <div className=\"state-info-panel\">\n              {renderStateInfo()}\n            </div>\n          </div>\n          \n          <div className=\"legend\">\n            <h3>Legend</h3>\n            <div className=\"legend-item\">\n              {selectedIndicator === 'UNRATE' ? (\n                <>\n                  <div className=\"legend-color\" style={{ background: '#e8f5e9' }}></div>\n                  <span>Low Unemployment</span>\n                  <div className=\"legend-color\" style={{ background: '#1b5e20' }}></div>\n                  <span>High Unemployment</span>\n                </>\n              ) : (\n                <>\n                  <div className=\"legend-color\" style={{ background: '#1b5e20' }}></div>\n                  <span>High {selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income'}</span>\n                  <div className=\"legend-color\" style={{ background: '#e8f5e9' }}></div>\n                  <span>Low {selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income'}</span>\n                </>\n              )}\n              <div className=\"legend-color\" style={{ background: '#D3D3D3' }}></div>\n              <span>No Data</span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RegionalData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}