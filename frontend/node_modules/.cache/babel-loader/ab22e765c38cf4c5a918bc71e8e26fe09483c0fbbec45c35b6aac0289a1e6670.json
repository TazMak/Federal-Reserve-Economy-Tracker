{"ast":null,"code":"var _jsxFileName = \"/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/EconomicCalendar.js\",\n  _s = $RefreshSig$();\n// src/components/EconomicCalendar.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EconomicCalendar = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const filterOptions = [{\n    id: 'all',\n    name: 'All Events'\n  }, {\n    id: 'fomc',\n    name: 'FOMC Meetings'\n  }, {\n    id: 'inflation',\n    name: 'Inflation Reports'\n  }, {\n    id: 'employment',\n    name: 'Employment Reports'\n  }, {\n    id: 'gdp',\n    name: 'GDP Reports'\n  }];\n  useEffect(() => {\n    const fetchCalendarEvents = async () => {\n      try {\n        setLoading(true);\n\n        // In a real app, you would fetch from your API\n        const response = await axios.get('/api/economic-calendar');\n        setEvents(response.data.events);\n      } catch (err) {\n        console.error('Error fetching calendar events:', err);\n        // Simulate data for demo\n        setEvents(generateSimulatedEvents());\n        setError(null); // Clear error since we're using simulated data\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCalendarEvents();\n  }, []);\n\n  // Generate simulated events for demo purposes\n  const generateSimulatedEvents = () => {\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth();\n    const currentYear = currentDate.getFullYear();\n\n    // Create dates for this month and next two months\n    const dates = [];\n    for (let i = 0; i < 3; i++) {\n      const month = (currentMonth + i) % 12;\n      const year = currentYear + Math.floor((currentMonth + i) / 12);\n\n      // How many days in this month\n      const daysInMonth = new Date(year, month + 1, 0).getDate();\n      for (let day = 1; day <= daysInMonth; day++) {\n        dates.push(new Date(year, month, day));\n      }\n    }\n\n    // Sample event types and descriptions\n    const eventTypes = [{\n      id: 'fomc',\n      name: 'FOMC Meeting',\n      importance: 'high'\n    }, {\n      id: 'fomc_minutes',\n      name: 'FOMC Minutes Release',\n      importance: 'medium',\n      category: 'fomc'\n    }, {\n      id: 'cpi',\n      name: 'CPI Release',\n      importance: 'high',\n      category: 'inflation'\n    }, {\n      id: 'ppi',\n      name: 'PPI Release',\n      importance: 'medium',\n      category: 'inflation'\n    }, {\n      id: 'employment',\n      name: 'Employment Situation',\n      importance: 'high',\n      category: 'employment'\n    }, {\n      id: 'jobless_claims',\n      name: 'Initial Jobless Claims',\n      importance: 'medium',\n      category: 'employment'\n    }, {\n      id: 'gdp',\n      name: 'GDP Release',\n      importance: 'high',\n      category: 'gdp'\n    }, {\n      id: 'retail_sales',\n      name: 'Retail Sales',\n      importance: 'medium',\n      category: 'other'\n    }, {\n      id: 'ism_manufacturing',\n      name: 'ISM Manufacturing PMI',\n      importance: 'medium',\n      category: 'other'\n    }, {\n      id: 'housing_starts',\n      name: 'Housing Starts',\n      importance: 'low',\n      category: 'other'\n    }];\n\n    // Create events\n    const events = [];\n\n    // FOMC meetings (roughly every 6 weeks)\n    let fomcDate = new Date(currentYear, currentMonth, 15);\n    for (let i = 0; i < 3; i++) {\n      fomcDate = new Date(fomcDate.getTime() + 42 * 24 * 60 * 60 * 1000); // Add ~6 weeks\n\n      if (fomcDate >= currentDate) {\n        events.push({\n          id: `fomc-${i}`,\n          title: 'FOMC Meeting',\n          date: fomcDate.toISOString().split('T')[0],\n          time: '14:00',\n          type: 'fomc',\n          category: 'fomc',\n          importance: 'high',\n          description: 'Federal Open Market Committee meeting to set monetary policy.',\n          previousValue: 'Federal Funds Rate: 5.25%-5.50%'\n        });\n\n        // FOMC Minutes come out 3 weeks after the meeting\n        const minutesDate = new Date(fomcDate.getTime() + 21 * 24 * 60 * 60 * 1000);\n        events.push({\n          id: `fomc-minutes-${i}`,\n          title: 'FOMC Minutes',\n          date: minutesDate.toISOString().split('T')[0],\n          time: '14:00',\n          type: 'fomc_minutes',\n          category: 'fomc',\n          importance: 'medium',\n          description: 'Minutes from the previous Federal Open Market Committee meeting.',\n          previousValue: null\n        });\n      }\n    }\n\n    // Monthly economic indicators\n    for (let i = 0; i < dates.length; i += 28) {\n      // Roughly monthly\n      const baseDate = dates[i];\n\n      // CPI is usually released around the 10th of the month\n      if (baseDate.getDate() <= 10) {\n        const cpiDate = new Date(baseDate);\n        cpiDate.setDate(10 + Math.floor(Math.random() * 3)); // 10th-12th\n\n        if (cpiDate >= currentDate) {\n          events.push({\n            id: `cpi-${i}`,\n            title: 'Consumer Price Index',\n            date: cpiDate.toISOString().split('T')[0],\n            time: '08:30',\n            type: 'cpi',\n            category: 'inflation',\n            importance: 'high',\n            description: 'Measures changes in the prices paid by consumers for goods and services.',\n            previousValue: '+0.2% m/m, +3.1% y/y'\n          });\n        }\n      }\n\n      // Jobs report is released the first Friday of the month\n      const firstFriday = new Date(baseDate);\n      firstFriday.setDate(1);\n      while (firstFriday.getDay() !== 5) {\n        firstFriday.setDate(firstFriday.getDate() + 1);\n      }\n      if (firstFriday >= currentDate) {\n        events.push({\n          id: `employment-${i}`,\n          title: 'Employment Situation',\n          date: firstFriday.toISOString().split('T')[0],\n          time: '08:30',\n          type: 'employment',\n          category: 'employment',\n          importance: 'high',\n          description: 'Monthly report on employment, unemployment rate, and wages.',\n          previousValue: 'Unemployment Rate: 3.8%, Nonfarm Payrolls: +216K'\n        });\n      }\n\n      // GDP is released near the end of the month\n      const gdpDate = new Date(baseDate);\n      gdpDate.setDate(25 + Math.floor(Math.random() * 3)); // 25th-27th\n\n      if (gdpDate >= currentDate && [0, 3, 6, 9].includes(gdpDate.getMonth())) {\n        // Quarterly\n        events.push({\n          id: `gdp-${i}`,\n          title: 'Gross Domestic Product',\n          date: gdpDate.toISOString().split('T')[0],\n          time: '08:30',\n          type: 'gdp',\n          category: 'gdp',\n          importance: 'high',\n          description: 'Quarterly report on the total value of goods and services produced.',\n          previousValue: '+3.2% q/q SAAR'\n        });\n      }\n\n      // Weekly jobless claims on Thursdays\n      for (let j = 0; j < 30; j += 7) {\n        if (i + j < dates.length) {\n          const claimsDate = new Date(dates[i + j]);\n          if (claimsDate.getDay() === 4 && claimsDate >= currentDate) {\n            // Thursday\n            events.push({\n              id: `jobless-claims-${i}-${j}`,\n              title: 'Initial Jobless Claims',\n              date: claimsDate.toISOString().split('T')[0],\n              time: '08:30',\n              type: 'jobless_claims',\n              category: 'employment',\n              importance: 'medium',\n              description: 'Weekly report on the number of new jobless claims filed.',\n              previousValue: '218K'\n            });\n          }\n        }\n      }\n    }\n\n    // Sort by date\n    events.sort((a, b) => new Date(`${a.date}T${a.time}`) - new Date(`${b.date}T${b.time}`));\n    return events;\n  };\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n\n  // Filter events based on selected category\n  const filteredEvents = filter === 'all' ? events : events.filter(event => event.category === filter);\n\n  // Group events by month and day\n  const groupedEvents = filteredEvents.reduce((groups, event) => {\n    const date = new Date(event.date);\n    const month = date.toLocaleString('default', {\n      month: 'long',\n      year: 'numeric'\n    });\n    const day = date.getDate();\n    if (!groups[month]) {\n      groups[month] = {};\n    }\n    if (!groups[month][day]) {\n      groups[month][day] = [];\n    }\n    groups[month][day].push(event);\n    return groups;\n  }, {});\n\n  // Get importance class for styling\n  const getImportanceClass = importance => {\n    switch (importance) {\n      case 'high':\n        return 'high-importance';\n      case 'medium':\n        return 'medium-importance';\n      case 'low':\n        return 'low-importance';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"economic-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Economic Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"filter-select\",\n          children: \"Filter Events: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"filter-select\",\n          value: filter,\n          onChange: handleFilterChange,\n          children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.id,\n            children: option.name\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading calendar events...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"importance-indicator high-importance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"High Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"importance-indicator medium-importance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Medium Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"importance-indicator low-importance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Low Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), Object.keys(groupedEvents).length > 0 ? Object.entries(groupedEvents).map(([month, days]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-month\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"month-header\",\n          children: month\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this), Object.entries(days).map(([day, dayEvents]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-day\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"day-number\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"day-name\",\n              children: new Date(dayEvents[0].date).toLocaleString('default', {\n                weekday: 'long'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-events\",\n            children: dayEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `calendar-event ${getImportanceClass(event.importance)}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-time\",\n                children: event.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-title\",\n                  children: event.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-description\",\n                  children: event.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 29\n                }, this), event.previousValue && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-previous\",\n                  children: [\"Previous: \", event.previousValue]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 27\n              }, this)]\n            }, event.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }, this)]\n        }, `${month}-${day}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 19\n        }, this))]\n      }, month, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-events\",\n        children: \"No events found for the selected filter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-disclaimer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Note: Release dates and times are subject to change. Data shown is for demonstration purposes only.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(EconomicCalendar, \"gFkCcNwubiiM5MRk/g1DOPt4IXM=\");\n_c = EconomicCalendar;\nexport default EconomicCalendar;\nvar _c;\n$RefreshReg$(_c, \"EconomicCalendar\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","EconomicCalendar","_s","loading","setLoading","error","setError","events","setEvents","filter","setFilter","filterOptions","id","name","fetchCalendarEvents","response","get","data","err","console","generateSimulatedEvents","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","dates","i","month","year","Math","floor","daysInMonth","getDate","day","push","eventTypes","importance","category","fomcDate","getTime","title","date","toISOString","split","time","type","description","previousValue","minutesDate","length","baseDate","cpiDate","setDate","random","firstFriday","getDay","gdpDate","includes","j","claimsDate","sort","a","b","handleFilterChange","event","target","value","filteredEvents","groupedEvents","reduce","groups","toLocaleString","getImportanceClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","map","option","Object","keys","entries","days","dayEvents","weekday","_c","$RefreshReg$"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/EconomicCalendar.js"],"sourcesContent":["// src/components/EconomicCalendar.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst EconomicCalendar = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [filter, setFilter] = useState('all');\n  \n  const filterOptions = [\n    { id: 'all', name: 'All Events' },\n    { id: 'fomc', name: 'FOMC Meetings' },\n    { id: 'inflation', name: 'Inflation Reports' },\n    { id: 'employment', name: 'Employment Reports' },\n    { id: 'gdp', name: 'GDP Reports' }\n  ];\n  \n  useEffect(() => {\n    const fetchCalendarEvents = async () => {\n      try {\n        setLoading(true);\n        \n        // In a real app, you would fetch from your API\n        const response = await axios.get('/api/economic-calendar');\n        setEvents(response.data.events);\n        \n      } catch (err) {\n        console.error('Error fetching calendar events:', err);\n        // Simulate data for demo\n        setEvents(generateSimulatedEvents());\n        setError(null); // Clear error since we're using simulated data\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchCalendarEvents();\n  }, []);\n  \n  // Generate simulated events for demo purposes\n  const generateSimulatedEvents = () => {\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth();\n    const currentYear = currentDate.getFullYear();\n    \n    // Create dates for this month and next two months\n    const dates = [];\n    for (let i = 0; i < 3; i++) {\n      const month = (currentMonth + i) % 12;\n      const year = currentYear + Math.floor((currentMonth + i) / 12);\n      \n      // How many days in this month\n      const daysInMonth = new Date(year, month + 1, 0).getDate();\n      \n      for (let day = 1; day <= daysInMonth; day++) {\n        dates.push(new Date(year, month, day));\n      }\n    }\n    \n    // Sample event types and descriptions\n    const eventTypes = [\n      { id: 'fomc', name: 'FOMC Meeting', importance: 'high' },\n      { id: 'fomc_minutes', name: 'FOMC Minutes Release', importance: 'medium', category: 'fomc' },\n      { id: 'cpi', name: 'CPI Release', importance: 'high', category: 'inflation' },\n      { id: 'ppi', name: 'PPI Release', importance: 'medium', category: 'inflation' },\n      { id: 'employment', name: 'Employment Situation', importance: 'high', category: 'employment' },\n      { id: 'jobless_claims', name: 'Initial Jobless Claims', importance: 'medium', category: 'employment' },\n      { id: 'gdp', name: 'GDP Release', importance: 'high', category: 'gdp' },\n      { id: 'retail_sales', name: 'Retail Sales', importance: 'medium', category: 'other' },\n      { id: 'ism_manufacturing', name: 'ISM Manufacturing PMI', importance: 'medium', category: 'other' },\n      { id: 'housing_starts', name: 'Housing Starts', importance: 'low', category: 'other' }\n    ];\n    \n    // Create events\n    const events = [];\n    \n    // FOMC meetings (roughly every 6 weeks)\n    let fomcDate = new Date(currentYear, currentMonth, 15);\n    for (let i = 0; i < 3; i++) {\n      fomcDate = new Date(fomcDate.getTime() + (42 * 24 * 60 * 60 * 1000)); // Add ~6 weeks\n      \n      if (fomcDate >= currentDate) {\n        events.push({\n          id: `fomc-${i}`,\n          title: 'FOMC Meeting',\n          date: fomcDate.toISOString().split('T')[0],\n          time: '14:00',\n          type: 'fomc',\n          category: 'fomc',\n          importance: 'high',\n          description: 'Federal Open Market Committee meeting to set monetary policy.',\n          previousValue: 'Federal Funds Rate: 5.25%-5.50%'\n        });\n        \n        // FOMC Minutes come out 3 weeks after the meeting\n        const minutesDate = new Date(fomcDate.getTime() + (21 * 24 * 60 * 60 * 1000));\n        events.push({\n          id: `fomc-minutes-${i}`,\n          title: 'FOMC Minutes',\n          date: minutesDate.toISOString().split('T')[0],\n          time: '14:00',\n          type: 'fomc_minutes',\n          category: 'fomc',\n          importance: 'medium',\n          description: 'Minutes from the previous Federal Open Market Committee meeting.',\n          previousValue: null\n        });\n      }\n    }\n    \n    // Monthly economic indicators\n    for (let i = 0; i < dates.length; i += 28) { // Roughly monthly\n      const baseDate = dates[i];\n      \n      // CPI is usually released around the 10th of the month\n      if (baseDate.getDate() <= 10) {\n        const cpiDate = new Date(baseDate);\n        cpiDate.setDate(10 + Math.floor(Math.random() * 3)); // 10th-12th\n        \n        if (cpiDate >= currentDate) {\n          events.push({\n            id: `cpi-${i}`,\n            title: 'Consumer Price Index',\n            date: cpiDate.toISOString().split('T')[0],\n            time: '08:30',\n            type: 'cpi',\n            category: 'inflation',\n            importance: 'high',\n            description: 'Measures changes in the prices paid by consumers for goods and services.',\n            previousValue: '+0.2% m/m, +3.1% y/y'\n          });\n        }\n      }\n      \n      // Jobs report is released the first Friday of the month\n      const firstFriday = new Date(baseDate);\n      firstFriday.setDate(1);\n      while (firstFriday.getDay() !== 5) {\n        firstFriday.setDate(firstFriday.getDate() + 1);\n      }\n      \n      if (firstFriday >= currentDate) {\n        events.push({\n          id: `employment-${i}`,\n          title: 'Employment Situation',\n          date: firstFriday.toISOString().split('T')[0],\n          time: '08:30',\n          type: 'employment',\n          category: 'employment',\n          importance: 'high',\n          description: 'Monthly report on employment, unemployment rate, and wages.',\n          previousValue: 'Unemployment Rate: 3.8%, Nonfarm Payrolls: +216K'\n        });\n      }\n      \n      // GDP is released near the end of the month\n      const gdpDate = new Date(baseDate);\n      gdpDate.setDate(25 + Math.floor(Math.random() * 3)); // 25th-27th\n      \n      if (gdpDate >= currentDate && [0, 3, 6, 9].includes(gdpDate.getMonth())) { // Quarterly\n        events.push({\n          id: `gdp-${i}`,\n          title: 'Gross Domestic Product',\n          date: gdpDate.toISOString().split('T')[0],\n          time: '08:30',\n          type: 'gdp',\n          category: 'gdp',\n          importance: 'high',\n          description: 'Quarterly report on the total value of goods and services produced.',\n          previousValue: '+3.2% q/q SAAR'\n        });\n      }\n      \n      // Weekly jobless claims on Thursdays\n      for (let j = 0; j < 30; j += 7) {\n        if (i + j < dates.length) {\n          const claimsDate = new Date(dates[i + j]);\n          if (claimsDate.getDay() === 4 && claimsDate >= currentDate) { // Thursday\n            events.push({\n              id: `jobless-claims-${i}-${j}`,\n              title: 'Initial Jobless Claims',\n              date: claimsDate.toISOString().split('T')[0],\n              time: '08:30',\n              type: 'jobless_claims',\n              category: 'employment',\n              importance: 'medium',\n              description: 'Weekly report on the number of new jobless claims filed.',\n              previousValue: '218K'\n            });\n          }\n        }\n      }\n    }\n    \n    // Sort by date\n    events.sort((a, b) => new Date(`${a.date}T${a.time}`) - new Date(`${b.date}T${b.time}`));\n    \n    return events;\n  };\n  \n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n  \n  // Filter events based on selected category\n  const filteredEvents = filter === 'all' \n    ? events \n    : events.filter(event => event.category === filter);\n  \n  // Group events by month and day\n  const groupedEvents = filteredEvents.reduce((groups, event) => {\n    const date = new Date(event.date);\n    const month = date.toLocaleString('default', { month: 'long', year: 'numeric' });\n    const day = date.getDate();\n    \n    if (!groups[month]) {\n      groups[month] = {};\n    }\n    \n    if (!groups[month][day]) {\n      groups[month][day] = [];\n    }\n    \n    groups[month][day].push(event);\n    return groups;\n  }, {});\n  \n  // Get importance class for styling\n  const getImportanceClass = (importance) => {\n    switch (importance) {\n      case 'high':\n        return 'high-importance';\n      case 'medium':\n        return 'medium-importance';\n      case 'low':\n        return 'low-importance';\n      default:\n        return '';\n    }\n  };\n  \n  return (\n    <div className=\"economic-calendar\">\n      <h2>Economic Calendar</h2>\n      \n      <div className=\"calendar-controls\">\n        <div className=\"selector\">\n          <label htmlFor=\"filter-select\">Filter Events: </label>\n          <select \n            id=\"filter-select\" \n            value={filter} \n            onChange={handleFilterChange}\n          >\n            {filterOptions.map(option => (\n              <option key={option.id} value={option.id}>\n                {option.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      \n      {loading ? (\n        <div className=\"loading\">Loading calendar events...</div>\n      ) : error ? (\n        <div className=\"error\">{error}</div>\n      ) : (\n        <div className=\"calendar-content\">\n          <div className=\"calendar-legend\">\n            <div className=\"legend-item\">\n              <span className=\"importance-indicator high-importance\"></span>\n              <span>High Impact</span>\n            </div>\n            <div className=\"legend-item\">\n              <span className=\"importance-indicator medium-importance\"></span>\n              <span>Medium Impact</span>\n            </div>\n            <div className=\"legend-item\">\n              <span className=\"importance-indicator low-importance\"></span>\n              <span>Low Impact</span>\n            </div>\n          </div>\n          \n          {Object.keys(groupedEvents).length > 0 ? (\n            Object.entries(groupedEvents).map(([month, days]) => (\n              <div key={month} className=\"calendar-month\">\n                <h3 className=\"month-header\">{month}</h3>\n                \n                {Object.entries(days).map(([day, dayEvents]) => (\n                  <div key={`${month}-${day}`} className=\"calendar-day\">\n                    <div className=\"day-header\">\n                      <span className=\"day-number\">{day}</span>\n                      <span className=\"day-name\">\n                        {new Date(dayEvents[0].date).toLocaleString('default', { weekday: 'long' })}\n                      </span>\n                    </div>\n                    \n                    <div className=\"day-events\">\n                      {dayEvents.map(event => (\n                        <div \n                          key={event.id} \n                          className={`calendar-event ${getImportanceClass(event.importance)}`}\n                        >\n                          <div className=\"event-time\">{event.time}</div>\n                          <div className=\"event-details\">\n                            <div className=\"event-title\">{event.title}</div>\n                            <div className=\"event-description\">{event.description}</div>\n                            {event.previousValue && (\n                              <div className=\"event-previous\">Previous: {event.previousValue}</div>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ))\n          ) : (\n            <div className=\"no-events\">No events found for the selected filter.</div>\n          )}\n        </div>\n      )}\n      \n      <div className=\"calendar-disclaimer\">\n        <p><em>Note: Release dates and times are subject to change. Data shown is for demonstration purposes only.</em></p>\n      </div>\n    </div>\n  );\n};\n\nexport default EconomicCalendar;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMe,aAAa,GAAG,CACpB;IAAEC,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAa,CAAC,EACjC;IAAED,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAgB,CAAC,EACrC;IAAED,EAAE,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAoB,CAAC,EAC9C;IAAED,EAAE,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAqB,CAAC,EAChD;IAAED,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAc,CAAC,CACnC;EAEDhB,SAAS,CAAC,MAAM;IACd,MAAMiB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACFV,UAAU,CAAC,IAAI,CAAC;;QAEhB;QACA,MAAMW,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,wBAAwB,CAAC;QAC1DR,SAAS,CAACO,QAAQ,CAACE,IAAI,CAACV,MAAM,CAAC;MAEjC,CAAC,CAAC,OAAOW,GAAG,EAAE;QACZC,OAAO,CAACd,KAAK,CAAC,iCAAiC,EAAEa,GAAG,CAAC;QACrD;QACAV,SAAS,CAACY,uBAAuB,CAAC,CAAC,CAAC;QACpCd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDU,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9B,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC;IAC3C,MAAMC,WAAW,GAAGJ,WAAW,CAACK,WAAW,CAAC,CAAC;;IAE7C;IACA,MAAMC,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAMC,KAAK,GAAG,CAACN,YAAY,GAAGK,CAAC,IAAI,EAAE;MACrC,MAAME,IAAI,GAAGL,WAAW,GAAGM,IAAI,CAACC,KAAK,CAAC,CAACT,YAAY,GAAGK,CAAC,IAAI,EAAE,CAAC;;MAE9D;MACA,MAAMK,WAAW,GAAG,IAAIX,IAAI,CAACQ,IAAI,EAAED,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC;MAE1D,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIF,WAAW,EAAEE,GAAG,EAAE,EAAE;QAC3CR,KAAK,CAACS,IAAI,CAAC,IAAId,IAAI,CAACQ,IAAI,EAAED,KAAK,EAAEM,GAAG,CAAC,CAAC;MACxC;IACF;;IAEA;IACA,MAAME,UAAU,GAAG,CACjB;MAAEzB,EAAE,EAAE,MAAM;MAAEC,IAAI,EAAE,cAAc;MAAEyB,UAAU,EAAE;IAAO,CAAC,EACxD;MAAE1B,EAAE,EAAE,cAAc;MAAEC,IAAI,EAAE,sBAAsB;MAAEyB,UAAU,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAO,CAAC,EAC5F;MAAE3B,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,aAAa;MAAEyB,UAAU,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAY,CAAC,EAC7E;MAAE3B,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,aAAa;MAAEyB,UAAU,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAY,CAAC,EAC/E;MAAE3B,EAAE,EAAE,YAAY;MAAEC,IAAI,EAAE,sBAAsB;MAAEyB,UAAU,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAa,CAAC,EAC9F;MAAE3B,EAAE,EAAE,gBAAgB;MAAEC,IAAI,EAAE,wBAAwB;MAAEyB,UAAU,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAa,CAAC,EACtG;MAAE3B,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,aAAa;MAAEyB,UAAU,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAM,CAAC,EACvE;MAAE3B,EAAE,EAAE,cAAc;MAAEC,IAAI,EAAE,cAAc;MAAEyB,UAAU,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAQ,CAAC,EACrF;MAAE3B,EAAE,EAAE,mBAAmB;MAAEC,IAAI,EAAE,uBAAuB;MAAEyB,UAAU,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAQ,CAAC,EACnG;MAAE3B,EAAE,EAAE,gBAAgB;MAAEC,IAAI,EAAE,gBAAgB;MAAEyB,UAAU,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAQ,CAAC,CACvF;;IAED;IACA,MAAMhC,MAAM,GAAG,EAAE;;IAEjB;IACA,IAAIiC,QAAQ,GAAG,IAAIlB,IAAI,CAACG,WAAW,EAAEF,YAAY,EAAE,EAAE,CAAC;IACtD,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BY,QAAQ,GAAG,IAAIlB,IAAI,CAACkB,QAAQ,CAACC,OAAO,CAAC,CAAC,GAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAK,CAAC,CAAC,CAAC;;MAEtE,IAAID,QAAQ,IAAInB,WAAW,EAAE;QAC3Bd,MAAM,CAAC6B,IAAI,CAAC;UACVxB,EAAE,EAAE,QAAQgB,CAAC,EAAE;UACfc,KAAK,EAAE,cAAc;UACrBC,IAAI,EAAEH,QAAQ,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC1CC,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE,MAAM;UACZR,QAAQ,EAAE,MAAM;UAChBD,UAAU,EAAE,MAAM;UAClBU,WAAW,EAAE,+DAA+D;UAC5EC,aAAa,EAAE;QACjB,CAAC,CAAC;;QAEF;QACA,MAAMC,WAAW,GAAG,IAAI5B,IAAI,CAACkB,QAAQ,CAACC,OAAO,CAAC,CAAC,GAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAK,CAAC;QAC7ElC,MAAM,CAAC6B,IAAI,CAAC;UACVxB,EAAE,EAAE,gBAAgBgB,CAAC,EAAE;UACvBc,KAAK,EAAE,cAAc;UACrBC,IAAI,EAAEO,WAAW,CAACN,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC7CC,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE,cAAc;UACpBR,QAAQ,EAAE,MAAM;UAChBD,UAAU,EAAE,QAAQ;UACpBU,WAAW,EAAE,kEAAkE;UAC/EC,aAAa,EAAE;QACjB,CAAC,CAAC;MACJ;IACF;;IAEA;IACA,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACwB,MAAM,EAAEvB,CAAC,IAAI,EAAE,EAAE;MAAE;MAC3C,MAAMwB,QAAQ,GAAGzB,KAAK,CAACC,CAAC,CAAC;;MAEzB;MACA,IAAIwB,QAAQ,CAAClB,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QAC5B,MAAMmB,OAAO,GAAG,IAAI/B,IAAI,CAAC8B,QAAQ,CAAC;QAClCC,OAAO,CAACC,OAAO,CAAC,EAAE,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACwB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;QAErD,IAAIF,OAAO,IAAIhC,WAAW,EAAE;UAC1Bd,MAAM,CAAC6B,IAAI,CAAC;YACVxB,EAAE,EAAE,OAAOgB,CAAC,EAAE;YACdc,KAAK,EAAE,sBAAsB;YAC7BC,IAAI,EAAEU,OAAO,CAACT,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACzCC,IAAI,EAAE,OAAO;YACbC,IAAI,EAAE,KAAK;YACXR,QAAQ,EAAE,WAAW;YACrBD,UAAU,EAAE,MAAM;YAClBU,WAAW,EAAE,0EAA0E;YACvFC,aAAa,EAAE;UACjB,CAAC,CAAC;QACJ;MACF;;MAEA;MACA,MAAMO,WAAW,GAAG,IAAIlC,IAAI,CAAC8B,QAAQ,CAAC;MACtCI,WAAW,CAACF,OAAO,CAAC,CAAC,CAAC;MACtB,OAAOE,WAAW,CAACC,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;QACjCD,WAAW,CAACF,OAAO,CAACE,WAAW,CAACtB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAChD;MAEA,IAAIsB,WAAW,IAAInC,WAAW,EAAE;QAC9Bd,MAAM,CAAC6B,IAAI,CAAC;UACVxB,EAAE,EAAE,cAAcgB,CAAC,EAAE;UACrBc,KAAK,EAAE,sBAAsB;UAC7BC,IAAI,EAAEa,WAAW,CAACZ,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC7CC,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE,YAAY;UAClBR,QAAQ,EAAE,YAAY;UACtBD,UAAU,EAAE,MAAM;UAClBU,WAAW,EAAE,6DAA6D;UAC1EC,aAAa,EAAE;QACjB,CAAC,CAAC;MACJ;;MAEA;MACA,MAAMS,OAAO,GAAG,IAAIpC,IAAI,CAAC8B,QAAQ,CAAC;MAClCM,OAAO,CAACJ,OAAO,CAAC,EAAE,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACwB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;MAErD,IAAIG,OAAO,IAAIrC,WAAW,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACsC,QAAQ,CAACD,OAAO,CAAClC,QAAQ,CAAC,CAAC,CAAC,EAAE;QAAE;QACzEjB,MAAM,CAAC6B,IAAI,CAAC;UACVxB,EAAE,EAAE,OAAOgB,CAAC,EAAE;UACdc,KAAK,EAAE,wBAAwB;UAC/BC,IAAI,EAAEe,OAAO,CAACd,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACzCC,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE,KAAK;UACXR,QAAQ,EAAE,KAAK;UACfD,UAAU,EAAE,MAAM;UAClBU,WAAW,EAAE,qEAAqE;UAClFC,aAAa,EAAE;QACjB,CAAC,CAAC;MACJ;;MAEA;MACA,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAE;QAC9B,IAAIhC,CAAC,GAAGgC,CAAC,GAAGjC,KAAK,CAACwB,MAAM,EAAE;UACxB,MAAMU,UAAU,GAAG,IAAIvC,IAAI,CAACK,KAAK,CAACC,CAAC,GAAGgC,CAAC,CAAC,CAAC;UACzC,IAAIC,UAAU,CAACJ,MAAM,CAAC,CAAC,KAAK,CAAC,IAAII,UAAU,IAAIxC,WAAW,EAAE;YAAE;YAC5Dd,MAAM,CAAC6B,IAAI,CAAC;cACVxB,EAAE,EAAE,kBAAkBgB,CAAC,IAAIgC,CAAC,EAAE;cAC9BlB,KAAK,EAAE,wBAAwB;cAC/BC,IAAI,EAAEkB,UAAU,CAACjB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cAC5CC,IAAI,EAAE,OAAO;cACbC,IAAI,EAAE,gBAAgB;cACtBR,QAAQ,EAAE,YAAY;cACtBD,UAAU,EAAE,QAAQ;cACpBU,WAAW,EAAE,0DAA0D;cACvEC,aAAa,EAAE;YACjB,CAAC,CAAC;UACJ;QACF;MACF;IACF;;IAEA;IACA1C,MAAM,CAACuD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAI1C,IAAI,CAAC,GAAGyC,CAAC,CAACpB,IAAI,IAAIoB,CAAC,CAACjB,IAAI,EAAE,CAAC,GAAG,IAAIxB,IAAI,CAAC,GAAG0C,CAAC,CAACrB,IAAI,IAAIqB,CAAC,CAAClB,IAAI,EAAE,CAAC,CAAC;IAExF,OAAOvC,MAAM;EACf,CAAC;EAED,MAAM0D,kBAAkB,GAAIC,KAAK,IAAK;IACpCxD,SAAS,CAACwD,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,cAAc,GAAG5D,MAAM,KAAK,KAAK,GACnCF,MAAM,GACNA,MAAM,CAACE,MAAM,CAACyD,KAAK,IAAIA,KAAK,CAAC3B,QAAQ,KAAK9B,MAAM,CAAC;;EAErD;EACA,MAAM6D,aAAa,GAAGD,cAAc,CAACE,MAAM,CAAC,CAACC,MAAM,EAAEN,KAAK,KAAK;IAC7D,MAAMvB,IAAI,GAAG,IAAIrB,IAAI,CAAC4C,KAAK,CAACvB,IAAI,CAAC;IACjC,MAAMd,KAAK,GAAGc,IAAI,CAAC8B,cAAc,CAAC,SAAS,EAAE;MAAE5C,KAAK,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAU,CAAC,CAAC;IAChF,MAAMK,GAAG,GAAGQ,IAAI,CAACT,OAAO,CAAC,CAAC;IAE1B,IAAI,CAACsC,MAAM,CAAC3C,KAAK,CAAC,EAAE;MAClB2C,MAAM,CAAC3C,KAAK,CAAC,GAAG,CAAC,CAAC;IACpB;IAEA,IAAI,CAAC2C,MAAM,CAAC3C,KAAK,CAAC,CAACM,GAAG,CAAC,EAAE;MACvBqC,MAAM,CAAC3C,KAAK,CAAC,CAACM,GAAG,CAAC,GAAG,EAAE;IACzB;IAEAqC,MAAM,CAAC3C,KAAK,CAAC,CAACM,GAAG,CAAC,CAACC,IAAI,CAAC8B,KAAK,CAAC;IAC9B,OAAOM,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAME,kBAAkB,GAAIpC,UAAU,IAAK;IACzC,QAAQA,UAAU;MAChB,KAAK,MAAM;QACT,OAAO,iBAAiB;MAC1B,KAAK,QAAQ;QACX,OAAO,mBAAmB;MAC5B,KAAK,KAAK;QACR,OAAO,gBAAgB;MACzB;QACE,OAAO,EAAE;IACb;EACF,CAAC;EAED,oBACEtC,OAAA;IAAK2E,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC5E,OAAA;MAAA4E,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1BhF,OAAA;MAAK2E,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChC5E,OAAA;QAAK2E,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvB5E,OAAA;UAAOiF,OAAO,EAAC,eAAe;UAAAL,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtDhF,OAAA;UACEY,EAAE,EAAC,eAAe;UAClBwD,KAAK,EAAE3D,MAAO;UACdyE,QAAQ,EAAEjB,kBAAmB;UAAAW,QAAA,EAE5BjE,aAAa,CAACwE,GAAG,CAACC,MAAM,iBACvBpF,OAAA;YAAwBoE,KAAK,EAAEgB,MAAM,CAACxE,EAAG;YAAAgE,QAAA,EACtCQ,MAAM,CAACvE;UAAI,GADDuE,MAAM,CAACxE,EAAE;YAAAiE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL7E,OAAO,gBACNH,OAAA;MAAK2E,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACvD3E,KAAK,gBACPL,OAAA;MAAK2E,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEvE;IAAK;MAAAwE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEpChF,OAAA;MAAK2E,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B5E,OAAA;QAAK2E,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B5E,OAAA;UAAK2E,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B5E,OAAA;YAAM2E,SAAS,EAAC;UAAsC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9DhF,OAAA;YAAA4E,QAAA,EAAM;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACNhF,OAAA;UAAK2E,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B5E,OAAA;YAAM2E,SAAS,EAAC;UAAwC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChEhF,OAAA;YAAA4E,QAAA,EAAM;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACNhF,OAAA;UAAK2E,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B5E,OAAA;YAAM2E,SAAS,EAAC;UAAqC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7DhF,OAAA;YAAA4E,QAAA,EAAM;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELK,MAAM,CAACC,IAAI,CAAChB,aAAa,CAAC,CAACnB,MAAM,GAAG,CAAC,GACpCkC,MAAM,CAACE,OAAO,CAACjB,aAAa,CAAC,CAACa,GAAG,CAAC,CAAC,CAACtD,KAAK,EAAE2D,IAAI,CAAC,kBAC9CxF,OAAA;QAAiB2E,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBACzC5E,OAAA;UAAI2E,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAE/C;QAAK;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAExCK,MAAM,CAACE,OAAO,CAACC,IAAI,CAAC,CAACL,GAAG,CAAC,CAAC,CAAChD,GAAG,EAAEsD,SAAS,CAAC,kBACzCzF,OAAA;UAA6B2E,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACnD5E,OAAA;YAAK2E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB5E,OAAA;cAAM2E,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEzC;YAAG;cAAA0C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzChF,OAAA;cAAM2E,SAAS,EAAC,UAAU;cAAAC,QAAA,EACvB,IAAItD,IAAI,CAACmE,SAAS,CAAC,CAAC,CAAC,CAAC9C,IAAI,CAAC,CAAC8B,cAAc,CAAC,SAAS,EAAE;gBAAEiB,OAAO,EAAE;cAAO,CAAC;YAAC;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAENhF,OAAA;YAAK2E,SAAS,EAAC,YAAY;YAAAC,QAAA,EACxBa,SAAS,CAACN,GAAG,CAACjB,KAAK,iBAClBlE,OAAA;cAEE2E,SAAS,EAAE,kBAAkBD,kBAAkB,CAACR,KAAK,CAAC5B,UAAU,CAAC,EAAG;cAAAsC,QAAA,gBAEpE5E,OAAA;gBAAK2E,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEV,KAAK,CAACpB;cAAI;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC9ChF,OAAA;gBAAK2E,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC5B5E,OAAA;kBAAK2E,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAEV,KAAK,CAACxB;gBAAK;kBAAAmC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChDhF,OAAA;kBAAK2E,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,EAAEV,KAAK,CAAClB;gBAAW;kBAAA6B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EAC3Dd,KAAK,CAACjB,aAAa,iBAClBjD,OAAA;kBAAK2E,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,GAAC,YAAU,EAACV,KAAK,CAACjB,aAAa;gBAAA;kBAAA4B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CACrE;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA,GAVDd,KAAK,CAACtD,EAAE;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAxBE,GAAGnD,KAAK,IAAIM,GAAG,EAAE;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAyBtB,CACN,CAAC;MAAA,GA9BMnD,KAAK;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA+BV,CACN,CAAC,gBAEFhF,OAAA;QAAK2E,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACzE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,eAEDhF,OAAA;MAAK2E,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClC5E,OAAA;QAAA4E,QAAA,eAAG5E,OAAA;UAAA4E,QAAA,EAAI;QAAmG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9E,EAAA,CAtUID,gBAAgB;AAAA0F,EAAA,GAAhB1F,gBAAgB;AAwUtB,eAAeA,gBAAgB;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}