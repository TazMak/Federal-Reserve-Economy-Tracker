{"ast":null,"code":"var _jsxFileName = \"/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/RegionalData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { formatPercentage, formatCurrency } from '../../utils/formatUtils';\n\n// New component for displaying the US map with regional economic data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegionalData = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [stateData, setStateData] = useState(null);\n  const [indicator, setIndicator] = useState('UNRATE');\n  const [mapColorData, setMapColorData] = useState({});\n\n  // List of indicators available for regional data\n  const indicators = [{\n    id: 'UNRATE',\n    name: 'Unemployment Rate',\n    formatter: formatPercentage\n  }, {\n    id: 'MSPUS',\n    name: 'Median House Price',\n    formatter: formatCurrency\n  }, {\n    id: 'PCPI',\n    name: 'Per Capita Personal Income',\n    formatter: formatCurrency\n  }];\n\n  // Fetch regional data for all states\n  useEffect(() => {\n    const fetchRegionalData = async () => {\n      try {\n        setLoading(true);\n        // This would be the endpoint that provides state-level data for the selected indicator\n        const response = await axios.get(`/api/regional/${indicator}`);\n\n        // Process the data to create color mapping for states\n        const colorData = {};\n        response.data.states.forEach(state => {\n          colorData[state.code] = {\n            value: state.value,\n            color: getColorForValue(state.value, indicator, response.data.states)\n          };\n        });\n        setMapColorData(colorData);\n        setLoading(false);\n      } catch (err) {\n        console.error(`Error fetching regional data for ${indicator}:`, err);\n        setError(`Failed to load regional data. Please try again later.`);\n        setLoading(false);\n      }\n    };\n    fetchRegionalData();\n  }, [indicator]);\n\n  // Get color based on value relative to other states\n  const getColorForValue = (value, indicatorId, allStates) => {\n    // Extract all values for this indicator\n    const values = allStates.map(state => state.value).filter(v => v !== null);\n\n    // Find min and max\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    const range = max - min;\n\n    // Calculate a color on a scale (e.g., from red to green or blue to red)\n    // For unemployment, higher is worse (more red)\n    if (indicatorId === 'UNRATE') {\n      const intensity = Math.floor((value - min) / range * 255);\n      return `rgb(${intensity}, ${255 - intensity}, 0)`;\n    }\n    // For other indicators, higher is better (more green)\n    else {\n      const intensity = Math.floor((value - min) / range * 255);\n      return `rgb(0, ${intensity}, ${255 - intensity})`;\n    }\n  };\n\n  // Handle state selection on map click\n  const handleStateClick = async stateCode => {\n    try {\n      setSelectedState(stateCode);\n\n      // Fetch detailed data for the selected state\n      const response = await axios.get(`/api/regional/${indicator}/${stateCode}`);\n      setStateData(response.data);\n    } catch (err) {\n      console.error(`Error fetching data for state ${stateCode}:`, err);\n      setError(`Failed to load data for the selected state.`);\n    }\n  };\n\n  // Handle indicator change\n  const handleIndicatorChange = event => {\n    setIndicator(event.target.value);\n    setSelectedState(null);\n    setStateData(null);\n  };\n\n  // Render the US map (simplified SVG map)\n  const renderMap = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 959 593\",\n        className: \"us-map\",\n        role: \"img\",\n        \"aria-label\": \"US Map\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M 800.5 168.5 L 827.4 162.2 L 826.8 157.3 L 813.1 161.5 L 809.3 159.6 L 804.1 162.8 L 800.5 168.5 Z\",\n          id: \"ME\",\n          fill: mapColorData.ME ? mapColorData.ME.color : '#D3D3D3',\n          onClick: () => handleStateClick('ME'),\n          className: \"state-path\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M 824.1 180.2 L 825.5 180 L 825.9 175.8 L 827.4 172.2 L 827.4 171.1 L 825.8 168.2 L 825.5 167.3 L 822.7 166.5 L 819.4 165.1 L 817.4 167.3 L 816.6 171.1 L 817 174.7 L 816.7 178.2 L 819.4 180.6 L 824.1 180.2 Z\",\n          id: \"NH\",\n          fill: mapColorData.NH ? mapColorData.NH.color : '#D3D3D3',\n          onClick: () => handleStateClick('NH'),\n          className: \"state-path\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Legend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-gradient\",\n          children: indicator === 'UNRATE' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: 'linear-gradient(to right, green, yellow, red)'\n              },\n              className: \"gradient-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: 'linear-gradient(to right, red, yellow, green)'\n              },\n              className: \"gradient-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regional-data indicator-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Regional Economic Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"indicator-select\",\n          children: \"Select Indicator: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"indicator-select\",\n          value: indicator,\n          onChange: handleIndicatorChange,\n          children: indicators.map(ind => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: ind.id,\n            children: ind.name\n          }, ind.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading regional data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regional-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-and-details\",\n        children: [renderMap(), selectedState && stateData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"state-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: stateData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"state-metrics\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"state-metric\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: indicators.find(ind => ind.id === indicator).name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric-value\",\n                children: indicators.find(ind => ind.id === indicator).formatter(stateData.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric-date\",\n                children: [\"As of \", stateData.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), stateData.additionalMetrics && stateData.additionalMetrics.map(metric => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"state-metric\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: metric.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric-value\",\n                children: metric.formattedValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric-date\",\n                children: [\"As of \", metric.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 23\n              }, this)]\n            }, metric.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"state-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Economic Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: stateData.overview || 'No overview available for this state.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionalData, \"ZvT5E8vN3xWRl/7xu3k99vO9HZA=\");\n_c = RegionalData;\nexport default RegionalData;\nvar _c;\n$RefreshReg$(_c, \"RegionalData\");","map":{"version":3,"names":["React","useState","useEffect","axios","formatPercentage","formatCurrency","jsxDEV","_jsxDEV","Fragment","_Fragment","RegionalData","_s","loading","setLoading","error","setError","selectedState","setSelectedState","stateData","setStateData","indicator","setIndicator","mapColorData","setMapColorData","indicators","id","name","formatter","fetchRegionalData","response","get","colorData","data","states","forEach","state","code","value","color","getColorForValue","err","console","indicatorId","allStates","values","map","filter","v","min","Math","max","range","intensity","floor","handleStateClick","stateCode","handleIndicatorChange","event","target","renderMap","className","children","viewBox","role","d","fill","ME","onClick","fileName","_jsxFileName","lineNumber","columnNumber","NH","style","background","htmlFor","onChange","ind","find","date","additionalMetrics","metric","formattedValue","overview","_c","$RefreshReg$"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/RegionalData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { formatPercentage, formatCurrency } from '../../utils/formatUtils';\n\n// New component for displaying the US map with regional economic data\nconst RegionalData = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [stateData, setStateData] = useState(null);\n  const [indicator, setIndicator] = useState('UNRATE');\n  const [mapColorData, setMapColorData] = useState({});\n\n  // List of indicators available for regional data\n  const indicators = [\n    { id: 'UNRATE', name: 'Unemployment Rate', formatter: formatPercentage },\n    { id: 'MSPUS', name: 'Median House Price', formatter: formatCurrency },\n    { id: 'PCPI', name: 'Per Capita Personal Income', formatter: formatCurrency },\n  ];\n\n  // Fetch regional data for all states\n  useEffect(() => {\n    const fetchRegionalData = async () => {\n      try {\n        setLoading(true);\n        // This would be the endpoint that provides state-level data for the selected indicator\n        const response = await axios.get(`/api/regional/${indicator}`);\n        \n        // Process the data to create color mapping for states\n        const colorData = {};\n        response.data.states.forEach(state => {\n          colorData[state.code] = {\n            value: state.value,\n            color: getColorForValue(state.value, indicator, response.data.states)\n          };\n        });\n        \n        setMapColorData(colorData);\n        setLoading(false);\n      } catch (err) {\n        console.error(`Error fetching regional data for ${indicator}:`, err);\n        setError(`Failed to load regional data. Please try again later.`);\n        setLoading(false);\n      }\n    };\n\n    fetchRegionalData();\n  }, [indicator]);\n\n  // Get color based on value relative to other states\n  const getColorForValue = (value, indicatorId, allStates) => {\n    // Extract all values for this indicator\n    const values = allStates.map(state => state.value).filter(v => v !== null);\n    \n    // Find min and max\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    const range = max - min;\n    \n    // Calculate a color on a scale (e.g., from red to green or blue to red)\n    // For unemployment, higher is worse (more red)\n    if (indicatorId === 'UNRATE') {\n      const intensity = Math.floor(((value - min) / range) * 255);\n      return `rgb(${intensity}, ${255 - intensity}, 0)`;\n    }\n    // For other indicators, higher is better (more green)\n    else {\n      const intensity = Math.floor(((value - min) / range) * 255);\n      return `rgb(0, ${intensity}, ${255 - intensity})`;\n    }\n  };\n\n  // Handle state selection on map click\n  const handleStateClick = async (stateCode) => {\n    try {\n      setSelectedState(stateCode);\n      \n      // Fetch detailed data for the selected state\n      const response = await axios.get(`/api/regional/${indicator}/${stateCode}`);\n      setStateData(response.data);\n    } catch (err) {\n      console.error(`Error fetching data for state ${stateCode}:`, err);\n      setError(`Failed to load data for the selected state.`);\n    }\n  };\n\n  // Handle indicator change\n  const handleIndicatorChange = (event) => {\n    setIndicator(event.target.value);\n    setSelectedState(null);\n    setStateData(null);\n  };\n\n  // Render the US map (simplified SVG map)\n  const renderMap = () => {\n    return (\n      <div className=\"map-container\">\n        <svg\n          viewBox=\"0 0 959 593\"\n          className=\"us-map\"\n          role=\"img\"\n          aria-label=\"US Map\"\n        >\n          {/* State paths would be included here - simplified for brevity */}\n          {/* Each state would have an onClick handler that calls handleStateClick(stateCode) */}\n          {/* Example for a few states: */}\n          <path\n            d=\"M 800.5 168.5 L 827.4 162.2 L 826.8 157.3 L 813.1 161.5 L 809.3 159.6 L 804.1 162.8 L 800.5 168.5 Z\"\n            id=\"ME\"\n            fill={mapColorData.ME ? mapColorData.ME.color : '#D3D3D3'}\n            onClick={() => handleStateClick('ME')}\n            className=\"state-path\"\n          />\n          <path\n            d=\"M 824.1 180.2 L 825.5 180 L 825.9 175.8 L 827.4 172.2 L 827.4 171.1 L 825.8 168.2 L 825.5 167.3 L 822.7 166.5 L 819.4 165.1 L 817.4 167.3 L 816.6 171.1 L 817 174.7 L 816.7 178.2 L 819.4 180.6 L 824.1 180.2 Z\"\n            id=\"NH\"\n            fill={mapColorData.NH ? mapColorData.NH.color : '#D3D3D3'}\n            onClick={() => handleStateClick('NH')}\n            className=\"state-path\"\n          />\n          {/* Add more state paths here - a full US map SVG would include all states */}\n        </svg>\n        <div className=\"map-legend\">\n          <h4>Legend</h4>\n          <div className=\"legend-gradient\">\n            {indicator === 'UNRATE' ? (\n              <>\n                <div style={{ background: 'linear-gradient(to right, green, yellow, red)' }} className=\"gradient-bar\" />\n                <div className=\"legend-labels\">\n                  <span>Low</span>\n                  <span>High</span>\n                </div>\n              </>\n            ) : (\n              <>\n                <div style={{ background: 'linear-gradient(to right, red, yellow, green)' }} className=\"gradient-bar\" />\n                <div className=\"legend-labels\">\n                  <span>Low</span>\n                  <span>High</span>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"regional-data indicator-page\">\n      <h2>Regional Economic Data</h2>\n      \n      <div className=\"controls\">\n        <div className=\"selector\">\n          <label htmlFor=\"indicator-select\">Select Indicator: </label>\n          <select \n            id=\"indicator-select\" \n            value={indicator} \n            onChange={handleIndicatorChange}\n          >\n            {indicators.map(ind => (\n              <option key={ind.id} value={ind.id}>\n                {ind.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      \n      {loading ? (\n        <div className=\"loading\">Loading regional data...</div>\n      ) : error ? (\n        <div className=\"error\">{error}</div>\n      ) : (\n        <div className=\"regional-content\">\n          <div className=\"map-and-details\">\n            {renderMap()}\n            \n            {selectedState && stateData && (\n              <div className=\"state-details\">\n                <h3>{stateData.name}</h3>\n                <div className=\"state-metrics\">\n                  <div className=\"state-metric\">\n                    <h4>{indicators.find(ind => ind.id === indicator).name}</h4>\n                    <p className=\"metric-value\">\n                      {indicators.find(ind => ind.id === indicator).formatter(stateData.value)}\n                    </p>\n                    <p className=\"metric-date\">As of {stateData.date}</p>\n                  </div>\n                  \n                  {/* Additional state metrics */}\n                  {stateData.additionalMetrics && stateData.additionalMetrics.map(metric => (\n                    <div className=\"state-metric\" key={metric.id}>\n                      <h4>{metric.name}</h4>\n                      <p className=\"metric-value\">{metric.formattedValue}</p>\n                      <p className=\"metric-date\">As of {metric.date}</p>\n                    </div>\n                  ))}\n                </div>\n                \n                {/* State-specific economic information */}\n                <div className=\"state-info\">\n                  <h4>Economic Overview</h4>\n                  <p>{stateData.overview || 'No overview available for this state.'}</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RegionalData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}