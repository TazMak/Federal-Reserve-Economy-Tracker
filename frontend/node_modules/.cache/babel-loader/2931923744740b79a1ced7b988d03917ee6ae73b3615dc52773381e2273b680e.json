{"ast":null,"code":"import React,{useRef,useEffect}from'react';import Chart from'chart.js/auto';// Import required Chart.js adapters\nimport'chartjs-adapter-date-fns';import{formatDate}from'../../utils/dateUtils';/**\n * BarChart component for displaying time series data as bars\n * @param {Object} props - Component props\n * @param {Array} props.data - Array of data objects\n * @param {string} props.xKey - Key for X-axis values in data objects\n * @param {string} props.yKey - Key for Y-axis values in data objects\n * @param {string} props.title - Chart title\n * @param {Function} props.tooltipFormatter - Function to format tooltip values\n */import{jsx as _jsx}from\"react/jsx-runtime\";const BarChart=_ref=>{let{data,xKey='date',yKey='value',title='',tooltipFormatter=null}=_ref;const chartRef=useRef(null);const chartInstance=useRef(null);useEffect(()=>{// refreshing the chart\nif(chartInstance.current){chartInstance.current.destroy();}if(!data||data.length===0||!chartRef.current){return;}const ctx=chartRef.current.getContext('2d');// Determine positive and negative values to color bars accordingly\nconst positiveColor='rgba(77, 175, 74, 0.7)';// Green\nconst negativeColor='rgba(214, 39, 40, 0.7)';// Red\nconst borderPositiveColor='rgba(77, 175, 74, 1)';const borderNegativeColor='rgba(214, 39, 40, 1)';const colors=data.map(item=>parseFloat(item[yKey])>=0?positiveColor:negativeColor);const borderColors=data.map(item=>parseFloat(item[yKey])>=0?borderPositiveColor:borderNegativeColor);// Prepare chart data\nconst chartData={labels:data.map(item=>item[xKey]),datasets:[{label:title,data:data.map(item=>item[yKey]),backgroundColor:colors,borderColor:borderColors,borderWidth:1}]};// Create new chart\nchartInstance.current=new Chart(ctx,{type:'bar',data:chartData,options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false},tooltip:{callbacks:{title:function(tooltipItems){// Format the date for tooltip title\nreturn formatDate(tooltipItems[0].label);},label:function(context){let value=context.parsed.y;// Use custom formatter if provided\nif(tooltipFormatter){return tooltipFormatter(value);}// Default formatting\nreturn value.toFixed(2);}}}},scales:{x:{type:'time',time:{parser:'yyyy-MM-dd',tooltipFormat:'MMM d, yyyy',unit:'quarter',displayFormats:{quarter:'MMM yyyy'}},title:{display:false},grid:{display:false},ticks:{autoSkip:true,maxTicksLimit:20}},y:{beginAtZero:false,title:{display:false},grid:{color:'#eee'}}}}});// Cleanup function\nreturn()=>{if(chartInstance.current){chartInstance.current.destroy();}};},[data,xKey,yKey,title,tooltipFormatter]);return/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:chartRef,height:\"250\"})});};export default BarChart;","map":{"version":3,"names":["React","useRef","useEffect","Chart","formatDate","jsx","_jsx","BarChart","_ref","data","xKey","yKey","title","tooltipFormatter","chartRef","chartInstance","current","destroy","length","ctx","getContext","positiveColor","negativeColor","borderPositiveColor","borderNegativeColor","colors","map","item","parseFloat","borderColors","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","type","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","callbacks","tooltipItems","context","value","parsed","y","toFixed","scales","x","time","parser","tooltipFormat","unit","displayFormats","quarter","grid","ticks","autoSkip","maxTicksLimit","beginAtZero","color","className","children","ref","height"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/charts/BarChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\n// Import required Chart.js adapters\nimport 'chartjs-adapter-date-fns';\nimport { formatDate } from '../../utils/dateUtils';\n\n/**\n * BarChart component for displaying time series data as bars\n * @param {Object} props - Component props\n * @param {Array} props.data - Array of data objects\n * @param {string} props.xKey - Key for X-axis values in data objects\n * @param {string} props.yKey - Key for Y-axis values in data objects\n * @param {string} props.title - Chart title\n * @param {Function} props.tooltipFormatter - Function to format tooltip values\n */\nconst BarChart = ({ \n  data, \n  xKey = 'date', \n  yKey = 'value', \n  title = '',\n  tooltipFormatter = null\n}) => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  useEffect(() => {\n    // refreshing the chart\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    \n    if (!data || data.length === 0 || !chartRef.current) {\n      return;\n    }\n    \n    const ctx = chartRef.current.getContext('2d');\n    \n    // Determine positive and negative values to color bars accordingly\n    const positiveColor = 'rgba(77, 175, 74, 0.7)';  // Green\n    const negativeColor = 'rgba(214, 39, 40, 0.7)';  // Red\n    const borderPositiveColor = 'rgba(77, 175, 74, 1)';\n    const borderNegativeColor = 'rgba(214, 39, 40, 1)';\n    \n    const colors = data.map(item => parseFloat(item[yKey]) >= 0 ? positiveColor : negativeColor);\n    const borderColors = data.map(item => parseFloat(item[yKey]) >= 0 ? borderPositiveColor : borderNegativeColor);\n    \n    // Prepare chart data\n    const chartData = {\n      labels: data.map(item => item[xKey]),\n      datasets: [\n        {\n          label: title,\n          data: data.map(item => item[yKey]),\n          backgroundColor: colors,\n          borderColor: borderColors,\n          borderWidth: 1\n        }\n      ]\n    };\n    \n    // Create new chart\n    chartInstance.current = new Chart(ctx, {\n      type: 'bar',\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false,\n          },\n          tooltip: {\n            callbacks: {\n              title: function(tooltipItems) {\n                // Format the date for tooltip title\n                return formatDate(tooltipItems[0].label);\n              },\n              label: function(context) {\n                let value = context.parsed.y;\n                \n                // Use custom formatter if provided\n                if (tooltipFormatter) {\n                  return tooltipFormatter(value);\n                }\n                \n                // Default formatting\n                return value.toFixed(2);\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              parser: 'yyyy-MM-dd',\n              tooltipFormat: 'MMM d, yyyy',\n              unit: 'quarter',\n              displayFormats: {\n                quarter: 'MMM yyyy'\n              }\n            },\n            title: {\n              display: false\n            },\n            grid: {\n              display: false\n            },\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 20\n            }\n          },\n          y: {\n            beginAtZero: false,\n            title: {\n              display: false\n            },\n            grid: {\n              color: '#eee'\n            }\n          }\n        }\n      }\n    });\n    \n    // Cleanup function\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data, xKey, yKey, title, tooltipFormatter]);\n\n  return (\n    <div className=\"chart-container\">\n      <canvas ref={chartRef} height=\"250\"></canvas>\n    </div>\n  );\n};\n\nexport default BarChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}