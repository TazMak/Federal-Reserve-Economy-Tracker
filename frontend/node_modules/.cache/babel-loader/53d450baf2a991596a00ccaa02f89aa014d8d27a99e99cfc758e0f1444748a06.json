{"ast":null,"code":"var _jsxFileName = \"/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/tools/PersonalImpactCalculator.js\",\n  _s = $RefreshSig$();\n// src/components/tools/PersonalImpactCalculator.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { formatCurrency } from '../../utils/formatUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PersonalImpactCalculator = () => {\n  _s();\n  // Economic data from API\n  const [economicData, setEconomicData] = useState({\n    inflation: 3.1,\n    // Current inflation rate (%)\n    fedRate: 5.5,\n    // Current Fed Funds Rate (%)\n    mortgageRate: 7.1,\n    // Current 30-year mortgage rate (%)\n    unemploymentRate: 3.8 // Current unemployment rate (%)\n  });\n\n  // User input values with defaults\n  const [income, setIncome] = useState(60000);\n  const [expenses, setExpenses] = useState(48000);\n  const [savings, setSavings] = useState(25000);\n  const [mortgage, setMortgage] = useState(300000);\n  const [mortgageTerm, setMortgageTerm] = useState(30);\n  const [mortgageRate, setMortgageRate] = useState(economicData.mortgageRate);\n  const [hasVariableRateLoan, setHasVariableRateLoan] = useState(false);\n\n  // Calculated impacts\n  const [impacts, setImpacts] = useState({\n    inflationImpact: 0,\n    savingsImpact: 0,\n    mortgageImpact: 0,\n    totalImpact: 0,\n    currentMortgagePayment: 0,\n    newMortgagePayment: 0\n  });\n\n  // Fetch current economic data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // In a real app, you would fetch latest values from your API\n        const response = await axios.get('/api/dashboard');\n\n        // Update with real data if available\n        if (response.data) {\n          var _response$data$CPIAUC, _response$data$FEDFUN, _response$data$UNRATE;\n          // Validate inflation data - if it's unusually high (>50%), \n          // assume it was multiplied by 100 erroneously\n          let inflationValue = ((_response$data$CPIAUC = response.data.CPIAUCSL) === null || _response$data$CPIAUC === void 0 ? void 0 : _response$data$CPIAUC.value) || 3.1;\n          if (inflationValue > 50) {\n            // Likely a display error, divide by 100 to fix\n            inflationValue = inflationValue / 100;\n            console.warn(\"Corrected unusually high inflation value (divided by 100)\");\n          }\n          setEconomicData({\n            inflation: inflationValue,\n            fedRate: ((_response$data$FEDFUN = response.data.FEDFUNDS) === null || _response$data$FEDFUN === void 0 ? void 0 : _response$data$FEDFUN.value) || 5.5,\n            mortgageRate: 7.1,\n            // This usually isn't in FRED, would need another source\n            unemploymentRate: ((_response$data$UNRATE = response.data.UNRATE) === null || _response$data$UNRATE === void 0 ? void 0 : _response$data$UNRATE.value) || 3.8\n          });\n        }\n      } catch (err) {\n        console.error('Error fetching economic data:', err);\n        // Keep default values if fetch fails\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Calculate impacts when inputs change\n  useEffect(() => {\n    // Make sure inflation is properly represented as a percentage\n    // If inflation is 3.1, it means 3.1%, so divide by 100 for decimal calculations\n    const inflationRate = economicData.inflation;\n    const annualInflationCost = expenses * (inflationRate / 100);\n\n    // Calculate impact on savings interest\n    const savingsInterestRate = economicData.fedRate / 2; // Simplification: savings rates are typically lower than Fed rate\n    const annualSavingsInterest = savings * (savingsInterestRate / 100);\n\n    // Calculate mortgage payment impacts\n    const calculateMortgagePayment = (principal, rate, years) => {\n      const monthlyRate = rate / 100 / 12;\n      const payments = years * 12;\n      if (monthlyRate === 0) return principal / payments;\n      return principal * monthlyRate * Math.pow(1 + monthlyRate, payments) / (Math.pow(1 + monthlyRate, payments) - 1);\n    };\n\n    // Current mortgage payment\n    const currentMonthlyPayment = calculateMortgagePayment(mortgage, mortgageRate, mortgageTerm);\n\n    // If variable rate loan, calculate with a 1% increase\n    const newRate = hasVariableRateLoan ? mortgageRate + 1 : mortgageRate;\n    const newMonthlyPayment = calculateMortgagePayment(mortgage, newRate, mortgageTerm);\n\n    // Annual mortgage rate impact\n    const mortgageRateImpact = hasVariableRateLoan ? (newMonthlyPayment - currentMonthlyPayment) * 12 : 0;\n\n    // Total financial impact (negative means cost to you, positive means benefit)\n    const totalImpact = annualSavingsInterest - annualInflationCost - mortgageRateImpact;\n    setImpacts({\n      inflationImpact: -annualInflationCost,\n      savingsImpact: annualSavingsInterest,\n      mortgageImpact: -mortgageRateImpact,\n      totalImpact: totalImpact,\n      currentMortgagePayment: currentMonthlyPayment,\n      newMortgagePayment: hasVariableRateLoan ? newMonthlyPayment : currentMonthlyPayment\n    });\n  }, [economicData, income, expenses, savings, mortgage, mortgageTerm, mortgageRate, hasVariableRateLoan]);\n\n  // Format currency values for display\n  const formatValue = value => {\n    return formatCurrency(value, 'USD', 0);\n  };\n\n  // Get impact class for styling\n  const getImpactClass = value => {\n    return value >= 0 ? 'positive-impact' : 'negative-impact';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"personal-impact-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Personal Economic Impact Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"calculator-description\",\n      children: \"See how current economic conditions affect your personal finances. Enter your financial details below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-economics\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Economic Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"economics-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"economic-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Inflation Rate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"economic-value\",\n              children: [economicData.inflation > 50 ? (economicData.inflation / 100).toFixed(1) : economicData.inflation.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"economic-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Federal Funds Rate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"economic-value\",\n              children: [economicData.fedRate.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"economic-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Average Mortgage Rate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"economic-value\",\n              children: [economicData.mortgageRate.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"economic-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Unemployment Rate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"economic-value\",\n              children: [economicData.unemploymentRate.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Financial Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"annual-income\",\n              children: \"Annual Income:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-with-prefix\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-prefix\",\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"annual-income\",\n                type: \"number\",\n                value: income,\n                onChange: e => setIncome(Number(e.target.value)),\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"annual-expenses\",\n              children: \"Annual Expenses:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-with-prefix\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-prefix\",\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"annual-expenses\",\n                type: \"number\",\n                value: expenses,\n                onChange: e => setExpenses(Number(e.target.value)),\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"savings-balance\",\n              children: \"Savings Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-with-prefix\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-prefix\",\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"savings-balance\",\n                type: \"number\",\n                value: savings,\n                onChange: e => setSavings(Number(e.target.value)),\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mortgage-balance\",\n              children: \"Mortgage Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-with-prefix\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-prefix\",\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"mortgage-balance\",\n                type: \"number\",\n                value: mortgage,\n                onChange: e => setMortgage(Number(e.target.value)),\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mortgage-term\",\n              children: \"Mortgage Term (Years):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"mortgage-term\",\n              type: \"number\",\n              value: mortgageTerm,\n              onChange: e => setMortgageTerm(Number(e.target.value)),\n              min: \"1\",\n              max: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mortgage-rate\",\n              children: \"Current Mortgage Rate (%):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"mortgage-rate\",\n              type: \"number\",\n              value: mortgageRate,\n              onChange: e => setMortgageRate(Number(e.target.value)),\n              min: \"0\",\n              step: \"0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: hasVariableRateLoan,\n                onChange: e => setHasVariableRateLoan(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), \"I have an adjustable-rate loan/mortgage\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Annual Economic Impact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"impact-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-label\",\n            children: \"Inflation Cost to You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `impact-value ${getImpactClass(impacts.inflationImpact)}`,\n            children: formatValue(impacts.inflationImpact)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-explanation\",\n            children: \"This is how much more you'll pay for the same goods and services due to current inflation.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"impact-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-label\",\n            children: \"Savings Interest Benefit:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `impact-value ${getImpactClass(impacts.savingsImpact)}`,\n            children: formatValue(impacts.savingsImpact)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-explanation\",\n            children: [\"Estimated interest earned on your savings at current rates (assumes \", (economicData.fedRate / 2).toFixed(1), \"% APY).\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), hasVariableRateLoan && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"impact-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-label\",\n            children: \"Mortgage Rate Impact:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `impact-value ${getImpactClass(impacts.mortgageImpact)}`,\n            children: formatValue(impacts.mortgageImpact)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-explanation\",\n            children: \"Assuming rates increase 1% on your adjustable-rate loan.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"impact-item total-impact\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-label\",\n            children: \"Total Annual Impact:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `impact-value ${getImpactClass(impacts.totalImpact)}`,\n            children: formatValue(impacts.totalImpact)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-explanation\",\n            children: \"The combined effect of current economic conditions on your finances per year.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mortgage-payment-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Monthly Mortgage Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-comparison\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"payment-label\",\n                children: \"Current Payment:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"payment-value\",\n                children: [formatValue(impacts.currentMortgagePayment), \"/month\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), hasVariableRateLoan && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"payment-label\",\n                children: \"If Rates Rise 1%:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"payment-value\",\n                children: [formatValue(impacts.newMortgagePayment), \"/month\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-disclaimer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Note: This calculator provides estimates based on current economic conditions and your inputs. Actual impacts may vary based on your specific financial situation, local economic conditions, and future changes in economic indicators.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(PersonalImpactCalculator, \"7wvWkszFwaClLlDy+Yx21vYZlgs=\");\n_c = PersonalImpactCalculator;\nexport default PersonalImpactCalculator;\nvar _c;\n$RefreshReg$(_c, \"PersonalImpactCalculator\");","map":{"version":3,"names":["React","useState","useEffect","axios","formatCurrency","jsxDEV","_jsxDEV","PersonalImpactCalculator","_s","economicData","setEconomicData","inflation","fedRate","mortgageRate","unemploymentRate","income","setIncome","expenses","setExpenses","savings","setSavings","mortgage","setMortgage","mortgageTerm","setMortgageTerm","setMortgageRate","hasVariableRateLoan","setHasVariableRateLoan","impacts","setImpacts","inflationImpact","savingsImpact","mortgageImpact","totalImpact","currentMortgagePayment","newMortgagePayment","fetchData","response","get","data","_response$data$CPIAUC","_response$data$FEDFUN","_response$data$UNRATE","inflationValue","CPIAUCSL","value","console","warn","FEDFUNDS","UNRATE","err","error","inflationRate","annualInflationCost","savingsInterestRate","annualSavingsInterest","calculateMortgagePayment","principal","rate","years","monthlyRate","payments","Math","pow","currentMonthlyPayment","newRate","newMonthlyPayment","mortgageRateImpact","formatValue","getImpactClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","htmlFor","id","type","onChange","e","Number","target","min","max","step","checked","_c","$RefreshReg$"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/tools/PersonalImpactCalculator.js"],"sourcesContent":["// src/components/tools/PersonalImpactCalculator.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { formatCurrency } from '../../utils/formatUtils';\n\nconst PersonalImpactCalculator = () => {\n  // Economic data from API\n  const [economicData, setEconomicData] = useState({\n    inflation: 3.1,     // Current inflation rate (%)\n    fedRate: 5.5,       // Current Fed Funds Rate (%)\n    mortgageRate: 7.1,  // Current 30-year mortgage rate (%)\n    unemploymentRate: 3.8, // Current unemployment rate (%)\n  });\n  \n  // User input values with defaults\n  const [income, setIncome] = useState(60000);\n  const [expenses, setExpenses] = useState(48000);\n  const [savings, setSavings] = useState(25000);\n  const [mortgage, setMortgage] = useState(300000);\n  const [mortgageTerm, setMortgageTerm] = useState(30);\n  const [mortgageRate, setMortgageRate] = useState(economicData.mortgageRate);\n  const [hasVariableRateLoan, setHasVariableRateLoan] = useState(false);\n  \n  // Calculated impacts\n  const [impacts, setImpacts] = useState({\n    inflationImpact: 0,\n    savingsImpact: 0,\n    mortgageImpact: 0,\n    totalImpact: 0,\n    currentMortgagePayment: 0,\n    newMortgagePayment: 0,\n  });\n  \n  // Fetch current economic data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // In a real app, you would fetch latest values from your API\n        const response = await axios.get('/api/dashboard');\n        \n        // Update with real data if available\n        if (response.data) {\n          // Validate inflation data - if it's unusually high (>50%), \n          // assume it was multiplied by 100 erroneously\n          let inflationValue = response.data.CPIAUCSL?.value || 3.1;\n          if (inflationValue > 50) {\n            // Likely a display error, divide by 100 to fix\n            inflationValue = inflationValue / 100;\n            console.warn(\"Corrected unusually high inflation value (divided by 100)\");\n          }\n          \n          setEconomicData({\n            inflation: inflationValue,\n            fedRate: response.data.FEDFUNDS?.value || 5.5,\n            mortgageRate: 7.1, // This usually isn't in FRED, would need another source\n            unemploymentRate: response.data.UNRATE?.value || 3.8,\n          });\n        }\n      } catch (err) {\n        console.error('Error fetching economic data:', err);\n        // Keep default values if fetch fails\n      }\n    };\n    \n    fetchData();\n  }, []);\n  \n  // Calculate impacts when inputs change\n  useEffect(() => {\n    // Make sure inflation is properly represented as a percentage\n    // If inflation is 3.1, it means 3.1%, so divide by 100 for decimal calculations\n    const inflationRate = economicData.inflation;\n    const annualInflationCost = expenses * (inflationRate / 100);\n    \n    // Calculate impact on savings interest\n    const savingsInterestRate = economicData.fedRate / 2; // Simplification: savings rates are typically lower than Fed rate\n    const annualSavingsInterest = savings * (savingsInterestRate / 100);\n    \n    // Calculate mortgage payment impacts\n    const calculateMortgagePayment = (principal, rate, years) => {\n      const monthlyRate = rate / 100 / 12;\n      const payments = years * 12;\n      if (monthlyRate === 0) return principal / payments;\n      return principal * monthlyRate * Math.pow(1 + monthlyRate, payments) / (Math.pow(1 + monthlyRate, payments) - 1);\n    };\n    \n    // Current mortgage payment\n    const currentMonthlyPayment = calculateMortgagePayment(mortgage, mortgageRate, mortgageTerm);\n    \n    // If variable rate loan, calculate with a 1% increase\n    const newRate = hasVariableRateLoan ? mortgageRate + 1 : mortgageRate;\n    const newMonthlyPayment = calculateMortgagePayment(mortgage, newRate, mortgageTerm);\n    \n    // Annual mortgage rate impact\n    const mortgageRateImpact = hasVariableRateLoan ? (newMonthlyPayment - currentMonthlyPayment) * 12 : 0;\n    \n    // Total financial impact (negative means cost to you, positive means benefit)\n    const totalImpact = (annualSavingsInterest - annualInflationCost - mortgageRateImpact);\n    \n    setImpacts({\n      inflationImpact: -annualInflationCost,\n      savingsImpact: annualSavingsInterest,\n      mortgageImpact: -mortgageRateImpact,\n      totalImpact: totalImpact,\n      currentMortgagePayment: currentMonthlyPayment,\n      newMortgagePayment: hasVariableRateLoan ? newMonthlyPayment : currentMonthlyPayment,\n    });\n  }, [economicData, income, expenses, savings, mortgage, mortgageTerm, mortgageRate, hasVariableRateLoan]);\n  \n  // Format currency values for display\n  const formatValue = (value) => {\n    return formatCurrency(value, 'USD', 0);\n  };\n  \n  // Get impact class for styling\n  const getImpactClass = (value) => {\n    return value >= 0 ? 'positive-impact' : 'negative-impact';\n  };\n  \n  return (\n    <div className=\"personal-impact-calculator\">\n      <h2>Personal Economic Impact Calculator</h2>\n      <p className=\"calculator-description\">\n        See how current economic conditions affect your personal finances. Enter your financial details below.\n      </p>\n      \n      <div className=\"calculator-container\">\n        <div className=\"current-economics\">\n          <h3>Current Economic Conditions</h3>\n          <div className=\"economics-grid\">\n            <div className=\"economic-item\">\n              <label>Inflation Rate:</label>\n              <span className=\"economic-value\">\n                {/* Add validation to prevent displaying unrealistic values */}\n                {economicData.inflation > 50 ? (economicData.inflation / 100).toFixed(1) : economicData.inflation.toFixed(1)}%\n              </span>\n            </div>\n            <div className=\"economic-item\">\n              <label>Federal Funds Rate:</label>\n              <span className=\"economic-value\">{economicData.fedRate.toFixed(2)}%</span>\n            </div>\n            <div className=\"economic-item\">\n              <label>Average Mortgage Rate:</label>\n              <span className=\"economic-value\">{economicData.mortgageRate.toFixed(2)}%</span>\n            </div>\n            <div className=\"economic-item\">\n              <label>Unemployment Rate:</label>\n              <span className=\"economic-value\">{economicData.unemploymentRate.toFixed(1)}%</span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"calculator-inputs\">\n          <h3>Your Financial Information</h3>\n          <div className=\"input-grid\">\n            <div className=\"input-group\">\n              <label htmlFor=\"annual-income\">Annual Income:</label>\n              <div className=\"input-with-prefix\">\n                <span className=\"input-prefix\">$</span>\n                <input\n                  id=\"annual-income\"\n                  type=\"number\"\n                  value={income}\n                  onChange={(e) => setIncome(Number(e.target.value))}\n                  min=\"0\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"input-group\">\n              <label htmlFor=\"annual-expenses\">Annual Expenses:</label>\n              <div className=\"input-with-prefix\">\n                <span className=\"input-prefix\">$</span>\n                <input\n                  id=\"annual-expenses\"\n                  type=\"number\"\n                  value={expenses}\n                  onChange={(e) => setExpenses(Number(e.target.value))}\n                  min=\"0\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"input-group\">\n              <label htmlFor=\"savings-balance\">Savings Balance:</label>\n              <div className=\"input-with-prefix\">\n                <span className=\"input-prefix\">$</span>\n                <input\n                  id=\"savings-balance\"\n                  type=\"number\"\n                  value={savings}\n                  onChange={(e) => setSavings(Number(e.target.value))}\n                  min=\"0\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"input-group\">\n              <label htmlFor=\"mortgage-balance\">Mortgage Balance:</label>\n              <div className=\"input-with-prefix\">\n                <span className=\"input-prefix\">$</span>\n                <input\n                  id=\"mortgage-balance\"\n                  type=\"number\"\n                  value={mortgage}\n                  onChange={(e) => setMortgage(Number(e.target.value))}\n                  min=\"0\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"input-group\">\n              <label htmlFor=\"mortgage-term\">Mortgage Term (Years):</label>\n              <input\n                id=\"mortgage-term\"\n                type=\"number\"\n                value={mortgageTerm}\n                onChange={(e) => setMortgageTerm(Number(e.target.value))}\n                min=\"1\"\n                max=\"30\"\n              />\n            </div>\n            \n            <div className=\"input-group\">\n              <label htmlFor=\"mortgage-rate\">Current Mortgage Rate (%):</label>\n              <input\n                id=\"mortgage-rate\"\n                type=\"number\"\n                value={mortgageRate}\n                onChange={(e) => setMortgageRate(Number(e.target.value))}\n                min=\"0\"\n                step=\"0.1\"\n              />\n            </div>\n            \n            <div className=\"input-group checkbox-group\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={hasVariableRateLoan}\n                  onChange={(e) => setHasVariableRateLoan(e.target.checked)}\n                />\n                I have an adjustable-rate loan/mortgage\n              </label>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"calculator-results\">\n          <h3>Annual Economic Impact</h3>\n          \n          <div className=\"impact-item\">\n            <div className=\"impact-label\">Inflation Cost to You:</div>\n            <div className={`impact-value ${getImpactClass(impacts.inflationImpact)}`}>\n              {formatValue(impacts.inflationImpact)}\n            </div>\n            <div className=\"impact-explanation\">\n              This is how much more you'll pay for the same goods and services due to current inflation.\n            </div>\n          </div>\n          \n          <div className=\"impact-item\">\n            <div className=\"impact-label\">Savings Interest Benefit:</div>\n            <div className={`impact-value ${getImpactClass(impacts.savingsImpact)}`}>\n              {formatValue(impacts.savingsImpact)}\n            </div>\n            <div className=\"impact-explanation\">\n              Estimated interest earned on your savings at current rates (assumes {(economicData.fedRate / 2).toFixed(1)}% APY).\n            </div>\n          </div>\n          \n          {hasVariableRateLoan && (\n            <div className=\"impact-item\">\n              <div className=\"impact-label\">Mortgage Rate Impact:</div>\n              <div className={`impact-value ${getImpactClass(impacts.mortgageImpact)}`}>\n                {formatValue(impacts.mortgageImpact)}\n              </div>\n              <div className=\"impact-explanation\">\n                Assuming rates increase 1% on your adjustable-rate loan.\n              </div>\n            </div>\n          )}\n          \n          <div className=\"impact-item total-impact\">\n            <div className=\"impact-label\">Total Annual Impact:</div>\n            <div className={`impact-value ${getImpactClass(impacts.totalImpact)}`}>\n              {formatValue(impacts.totalImpact)}\n            </div>\n            <div className=\"impact-explanation\">\n              The combined effect of current economic conditions on your finances per year.\n            </div>\n          </div>\n          \n          <div className=\"mortgage-payment-section\">\n            <h4>Monthly Mortgage Payment</h4>\n            <div className=\"payment-comparison\">\n              <div className=\"payment-item\">\n                <div className=\"payment-label\">Current Payment:</div>\n                <div className=\"payment-value\">{formatValue(impacts.currentMortgagePayment)}/month</div>\n              </div>\n              \n              {hasVariableRateLoan && (\n                <div className=\"payment-item\">\n                  <div className=\"payment-label\">If Rates Rise 1%:</div>\n                  <div className=\"payment-value\">{formatValue(impacts.newMortgagePayment)}/month</div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"calculator-disclaimer\">\n        <p><em>Note: This calculator provides estimates based on current economic conditions and your inputs. Actual impacts may vary based on your specific financial situation, local economic conditions, and future changes in economic indicators.</em></p>\n      </div>\n    </div>\n  );\n};\n\nexport default PersonalImpactCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}