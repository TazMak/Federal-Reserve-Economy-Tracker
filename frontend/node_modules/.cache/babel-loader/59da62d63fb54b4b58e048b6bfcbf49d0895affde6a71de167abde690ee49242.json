{"ast":null,"code":"var _jsxFileName = \"/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/EnhancedRegionalAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { formatCurrency, formatPercentage } from '../utils/formatUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnhancedRegionalAnalysis = ({\n  selectedIndicator = 'UNRATE',\n  statesData = []\n}) => {\n  _s();\n  var _topStates$, _topStates$2, _topStates$3, _topStates$4, _topStates$5, _topStates$6;\n  const [topStates, setTopStates] = useState([]);\n  const [bottomStates, setBottomStates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (statesData.length > 0) {\n      setLoading(true);\n\n      // Filter out states with null values\n      const validStates = statesData.filter(state => state.value !== null);\n\n      // Sort states by value\n      const sortedStates = [...validStates].sort((a, b) => {\n        // For unemployment, lower is better\n        if (selectedIndicator === 'UNRATE') {\n          return a.value - b.value;\n        }\n        // For income and house prices, higher is better\n        return b.value - a.value;\n      });\n\n      // Get top 5 and bottom 5 states\n      setTopStates(sortedStates.slice(0, 5));\n      setBottomStates(sortedStates.slice(-5).reverse());\n      setLoading(false);\n    }\n  }, [selectedIndicator, statesData]);\n  const formatValue = value => {\n    if (value === null || value === undefined) return 'N/A';\n    if (selectedIndicator === 'UNRATE') {\n      return formatPercentage(value);\n    } else if (selectedIndicator === 'MSPUS') {\n      return formatCurrency(value, 'USD', 0);\n    } else if (selectedIndicator === 'PCPI') {\n      return formatCurrency(value, 'USD', 0);\n    }\n    return value.toLocaleString();\n  };\n  const getChartTitle = () => {\n    if (selectedIndicator === 'UNRATE') {\n      return 'Unemployment Rate by State';\n    } else if (selectedIndicator === 'MSPUS') {\n      return 'Median House Price by State';\n    } else if (selectedIndicator === 'PCPI') {\n      return 'Per Capita Personal Income by State';\n    }\n    return 'State Comparison';\n  };\n  const getValueLabel = () => {\n    if (selectedIndicator === 'UNRATE') {\n      return 'Unemployment Rate (%)';\n    } else if (selectedIndicator === 'MSPUS') {\n      return 'Median House Price ($)';\n    } else if (selectedIndicator === 'PCPI') {\n      return 'Per Capita Income ($)';\n    }\n    return 'Value';\n  };\n  const getBarColor = stateName => {\n    // Check if state is in top states (good performers)\n    if (topStates.some(state => state.name === stateName)) {\n      return selectedIndicator === 'UNRATE' ? '#2ca02c' : '#2ca02c'; // Green\n    }\n    // Check if state is in bottom states (poor performers)\n    if (bottomStates.some(state => state.name === stateName)) {\n      return selectedIndicator === 'UNRATE' ? '#d62728' : '#d62728'; // Red\n    }\n    return '#8884d8'; // Default purple\n  };\n  const prepareChartData = () => {\n    // Combine top and bottom states for the chart\n    return [...topStates, ...bottomStates].map(state => ({\n      name: state.code,\n      // Using state code for brevity in the chart\n      fullName: state.name,\n      value: state.value,\n      fill: getBarColor(state.name)\n    }));\n  };\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-tooltip\",\n        style: {\n          backgroundColor: 'white',\n          padding: '10px',\n          border: '1px solid #ccc'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"label\",\n          style: {\n            margin: '0',\n            fontWeight: 'bold'\n          },\n          children: data.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"value\",\n          style: {\n            margin: '0'\n          },\n          children: [getValueLabel(), \": \", formatValue(data.value)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  if (loading || statesData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading regional comparison data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"enhanced-regional-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"State Comparison: \", getChartTitle()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-comparison-chart\",\n      style: {\n        height: '400px',\n        marginBottom: '2rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: prepareChartData(),\n          margin: {\n            top: 20,\n            right: 30,\n            left: 30,\n            bottom: 70\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\",\n            angle: -45,\n            textAnchor: \"end\",\n            height: 70,\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            label: {\n              value: getValueLabel(),\n              angle: -90,\n              position: 'insideLeft',\n              style: {\n                textAnchor: 'middle'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"value\",\n            name: getValueLabel(),\n            fill: \"#8884d8\",\n            isAnimationActive: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regional-insights\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"insight-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Top Performing States \", selectedIndicator === 'UNRATE' ? '(Lowest Unemployment)' : '(Highest Values)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"insight-list\",\n          children: topStates.map(state => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"insight-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"state-name\",\n              children: state.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"state-value\",\n              children: formatValue(state.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, state.code, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"insight-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Bottom Performing States \", selectedIndicator === 'UNRATE' ? '(Highest Unemployment)' : '(Lowest Values)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"insight-list\",\n          children: bottomStates.map(state => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"insight-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"state-name\",\n              children: state.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"state-value\",\n              children: formatValue(state.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, state.code, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regional-analysis-note\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Analysis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), \" \", selectedIndicator === 'UNRATE' ? `States with lower unemployment rates typically experience stronger job markets and economic growth. Currently, ${(_topStates$ = topStates[0]) === null || _topStates$ === void 0 ? void 0 : _topStates$.name} has the lowest unemployment rate at ${formatValue((_topStates$2 = topStates[0]) === null || _topStates$2 === void 0 ? void 0 : _topStates$2.value)}.` : selectedIndicator === 'MSPUS' ? `Housing prices reflect both economic strength and cost of living. ${(_topStates$3 = topStates[0]) === null || _topStates$3 === void 0 ? void 0 : _topStates$3.name} currently has the highest median house price at ${formatValue((_topStates$4 = topStates[0]) === null || _topStates$4 === void 0 ? void 0 : _topStates$4.value)}, which may indicate strong demand but also affordability challenges.` : `Per capita income reflects the overall economic prosperity of a state. ${(_topStates$5 = topStates[0]) === null || _topStates$5 === void 0 ? void 0 : _topStates$5.name} has the highest per capita income at ${formatValue((_topStates$6 = topStates[0]) === null || _topStates$6 === void 0 ? void 0 : _topStates$6.value)}, suggesting a strong economy with high-wage jobs.`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedRegionalAnalysis, \"ZbARBUwuPLjCXweL2KiJ3IZlv20=\");\n_c = EnhancedRegionalAnalysis;\nexport default EnhancedRegionalAnalysis;\nvar _c;\n$RefreshReg$(_c, \"EnhancedRegionalAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","formatCurrency","formatPercentage","jsxDEV","_jsxDEV","EnhancedRegionalAnalysis","selectedIndicator","statesData","_s","_topStates$","_topStates$2","_topStates$3","_topStates$4","_topStates$5","_topStates$6","topStates","setTopStates","bottomStates","setBottomStates","loading","setLoading","length","validStates","filter","state","value","sortedStates","sort","a","b","slice","reverse","formatValue","undefined","toLocaleString","getChartTitle","getValueLabel","getBarColor","stateName","some","name","prepareChartData","map","code","fullName","fill","CustomTooltip","active","payload","label","data","className","style","backgroundColor","padding","border","children","margin","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","height","marginBottom","width","top","right","left","bottom","strokeDasharray","dataKey","angle","textAnchor","tick","fontSize","position","content","isAnimationActive","_c","$RefreshReg$"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/EnhancedRegionalAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { formatCurrency, formatPercentage } from '../utils/formatUtils';\n\nconst EnhancedRegionalAnalysis = ({ selectedIndicator = 'UNRATE', statesData = [] }) => {\n  const [topStates, setTopStates] = useState([]);\n  const [bottomStates, setBottomStates] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (statesData.length > 0) {\n      setLoading(true);\n      \n      // Filter out states with null values\n      const validStates = statesData.filter(state => state.value !== null);\n      \n      // Sort states by value\n      const sortedStates = [...validStates].sort((a, b) => {\n        // For unemployment, lower is better\n        if (selectedIndicator === 'UNRATE') {\n          return a.value - b.value;\n        }\n        // For income and house prices, higher is better\n        return b.value - a.value;\n      });\n      \n      // Get top 5 and bottom 5 states\n      setTopStates(sortedStates.slice(0, 5));\n      setBottomStates(sortedStates.slice(-5).reverse());\n      \n      setLoading(false);\n    }\n  }, [selectedIndicator, statesData]);\n  \n  const formatValue = (value) => {\n    if (value === null || value === undefined) return 'N/A';\n    \n    if (selectedIndicator === 'UNRATE') {\n      return formatPercentage(value);\n    } else if (selectedIndicator === 'MSPUS') {\n      return formatCurrency(value, 'USD', 0);\n    } else if (selectedIndicator === 'PCPI') {\n      return formatCurrency(value, 'USD', 0);\n    }\n    \n    return value.toLocaleString();\n  };\n  \n  const getChartTitle = () => {\n    if (selectedIndicator === 'UNRATE') {\n      return 'Unemployment Rate by State';\n    } else if (selectedIndicator === 'MSPUS') {\n      return 'Median House Price by State';\n    } else if (selectedIndicator === 'PCPI') {\n      return 'Per Capita Personal Income by State';\n    }\n    return 'State Comparison';\n  };\n  \n  const getValueLabel = () => {\n    if (selectedIndicator === 'UNRATE') {\n      return 'Unemployment Rate (%)';\n    } else if (selectedIndicator === 'MSPUS') {\n      return 'Median House Price ($)';\n    } else if (selectedIndicator === 'PCPI') {\n      return 'Per Capita Income ($)';\n    }\n    return 'Value';\n  };\n  \n  const getBarColor = (stateName) => {\n    // Check if state is in top states (good performers)\n    if (topStates.some(state => state.name === stateName)) {\n      return selectedIndicator === 'UNRATE' ? '#2ca02c' : '#2ca02c'; // Green\n    }\n    // Check if state is in bottom states (poor performers)\n    if (bottomStates.some(state => state.name === stateName)) {\n      return selectedIndicator === 'UNRATE' ? '#d62728' : '#d62728'; // Red\n    }\n    return '#8884d8'; // Default purple\n  };\n  \n  const prepareChartData = () => {\n    // Combine top and bottom states for the chart\n    return [...topStates, ...bottomStates].map(state => ({\n      name: state.code, // Using state code for brevity in the chart\n      fullName: state.name,\n      value: state.value,\n      fill: getBarColor(state.name)\n    }));\n  };\n  \n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"custom-tooltip\" style={{ backgroundColor: 'white', padding: '10px', border: '1px solid #ccc' }}>\n          <p className=\"label\" style={{ margin: '0', fontWeight: 'bold' }}>{data.fullName}</p>\n          <p className=\"value\" style={{ margin: '0' }}>{getValueLabel()}: {formatValue(data.value)}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n  \n  if (loading || statesData.length === 0) {\n    return <div className=\"loading\">Loading regional comparison data...</div>;\n  }\n  \n  return (\n    <div className=\"enhanced-regional-analysis\">\n      <h3>State Comparison: {getChartTitle()}</h3>\n      <div className=\"state-comparison-chart\" style={{ height: '400px', marginBottom: '2rem' }}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            data={prepareChartData()}\n            margin={{ top: 20, right: 30, left: 30, bottom: 70 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"name\" \n              angle={-45} \n              textAnchor=\"end\" \n              height={70}\n              tick={{ fontSize: 12 }}\n            />\n            <YAxis \n              label={{ \n                value: getValueLabel(), \n                angle: -90, \n                position: 'insideLeft',\n                style: { textAnchor: 'middle' }\n              }} \n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Legend />\n            <Bar \n              dataKey=\"value\" \n              name={getValueLabel()} \n              fill=\"#8884d8\"\n              isAnimationActive={true} \n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      \n      <div className=\"regional-insights\">\n        <div className=\"insight-section\">\n          <h4>Top Performing States {selectedIndicator === 'UNRATE' ? '(Lowest Unemployment)' : '(Highest Values)'}</h4>\n          <ul className=\"insight-list\">\n            {topStates.map(state => (\n              <li key={state.code} className=\"insight-item\">\n                <span className=\"state-name\">{state.name}</span>\n                <span className=\"state-value\">{formatValue(state.value)}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n        \n        <div className=\"insight-section\">\n          <h4>Bottom Performing States {selectedIndicator === 'UNRATE' ? '(Highest Unemployment)' : '(Lowest Values)'}</h4>\n          <ul className=\"insight-list\">\n            {bottomStates.map(state => (\n              <li key={state.code} className=\"insight-item\">\n                <span className=\"state-name\">{state.name}</span>\n                <span className=\"state-value\">{formatValue(state.value)}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      \n      <div className=\"regional-analysis-note\">\n        <p>\n          <strong>Analysis:</strong> {selectedIndicator === 'UNRATE' \n            ? `States with lower unemployment rates typically experience stronger job markets and economic growth. Currently, ${topStates[0]?.name} has the lowest unemployment rate at ${formatValue(topStates[0]?.value)}.`\n            : selectedIndicator === 'MSPUS' \n              ? `Housing prices reflect both economic strength and cost of living. ${topStates[0]?.name} currently has the highest median house price at ${formatValue(topStates[0]?.value)}, which may indicate strong demand but also affordability challenges.`\n              : `Per capita income reflects the overall economic prosperity of a state. ${topStates[0]?.name} has the highest per capita income at ${formatValue(topStates[0]?.value)}, suggesting a strong economy with high-wage jobs.`\n          }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedRegionalAnalysis;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAC3G,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,wBAAwB,GAAGA,CAAC;EAAEC,iBAAiB,GAAG,QAAQ;EAAEC,UAAU,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,WAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,YAAA;EACtF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAIe,UAAU,CAACc,MAAM,GAAG,CAAC,EAAE;MACzBD,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAME,WAAW,GAAGf,UAAU,CAACgB,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAK,IAAI,CAAC;;MAEpE;MACA,MAAMC,YAAY,GAAG,CAAC,GAAGJ,WAAW,CAAC,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACnD;QACA,IAAIvB,iBAAiB,KAAK,QAAQ,EAAE;UAClC,OAAOsB,CAAC,CAACH,KAAK,GAAGI,CAAC,CAACJ,KAAK;QAC1B;QACA;QACA,OAAOI,CAAC,CAACJ,KAAK,GAAGG,CAAC,CAACH,KAAK;MAC1B,CAAC,CAAC;;MAEF;MACAT,YAAY,CAACU,YAAY,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACtCZ,eAAe,CAACQ,YAAY,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;MAEjDX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACd,iBAAiB,EAAEC,UAAU,CAAC,CAAC;EAEnC,MAAMyB,WAAW,GAAIP,KAAK,IAAK;IAC7B,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKQ,SAAS,EAAE,OAAO,KAAK;IAEvD,IAAI3B,iBAAiB,KAAK,QAAQ,EAAE;MAClC,OAAOJ,gBAAgB,CAACuB,KAAK,CAAC;IAChC,CAAC,MAAM,IAAInB,iBAAiB,KAAK,OAAO,EAAE;MACxC,OAAOL,cAAc,CAACwB,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IACxC,CAAC,MAAM,IAAInB,iBAAiB,KAAK,MAAM,EAAE;MACvC,OAAOL,cAAc,CAACwB,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IACxC;IAEA,OAAOA,KAAK,CAACS,cAAc,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI7B,iBAAiB,KAAK,QAAQ,EAAE;MAClC,OAAO,4BAA4B;IACrC,CAAC,MAAM,IAAIA,iBAAiB,KAAK,OAAO,EAAE;MACxC,OAAO,6BAA6B;IACtC,CAAC,MAAM,IAAIA,iBAAiB,KAAK,MAAM,EAAE;MACvC,OAAO,qCAAqC;IAC9C;IACA,OAAO,kBAAkB;EAC3B,CAAC;EAED,MAAM8B,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI9B,iBAAiB,KAAK,QAAQ,EAAE;MAClC,OAAO,uBAAuB;IAChC,CAAC,MAAM,IAAIA,iBAAiB,KAAK,OAAO,EAAE;MACxC,OAAO,wBAAwB;IACjC,CAAC,MAAM,IAAIA,iBAAiB,KAAK,MAAM,EAAE;MACvC,OAAO,uBAAuB;IAChC;IACA,OAAO,OAAO;EAChB,CAAC;EAED,MAAM+B,WAAW,GAAIC,SAAS,IAAK;IACjC;IACA,IAAIvB,SAAS,CAACwB,IAAI,CAACf,KAAK,IAAIA,KAAK,CAACgB,IAAI,KAAKF,SAAS,CAAC,EAAE;MACrD,OAAOhC,iBAAiB,KAAK,QAAQ,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;IACjE;IACA;IACA,IAAIW,YAAY,CAACsB,IAAI,CAACf,KAAK,IAAIA,KAAK,CAACgB,IAAI,KAAKF,SAAS,CAAC,EAAE;MACxD,OAAOhC,iBAAiB,KAAK,QAAQ,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;IACjE;IACA,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC;EAED,MAAMmC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA,OAAO,CAAC,GAAG1B,SAAS,EAAE,GAAGE,YAAY,CAAC,CAACyB,GAAG,CAAClB,KAAK,KAAK;MACnDgB,IAAI,EAAEhB,KAAK,CAACmB,IAAI;MAAE;MAClBC,QAAQ,EAAEpB,KAAK,CAACgB,IAAI;MACpBf,KAAK,EAAED,KAAK,CAACC,KAAK;MAClBoB,IAAI,EAAER,WAAW,CAACb,KAAK,CAACgB,IAAI;IAC9B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAC;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,KAAK;IACpD,IAAIF,MAAM,IAAIC,OAAO,IAAIA,OAAO,CAAC3B,MAAM,EAAE;MACvC,MAAM6B,IAAI,GAAGF,OAAO,CAAC,CAAC,CAAC,CAACA,OAAO;MAC/B,oBACE5C,OAAA;QAAK+C,SAAS,EAAC,gBAAgB;QAACC,KAAK,EAAE;UAAEC,eAAe,EAAE,OAAO;UAAEC,OAAO,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAiB,CAAE;QAAAC,QAAA,gBAC7GpD,OAAA;UAAG+C,SAAS,EAAC,OAAO;UAACC,KAAK,EAAE;YAAEK,MAAM,EAAE,GAAG;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAAF,QAAA,EAAEN,IAAI,CAACN;QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpF1D,OAAA;UAAG+C,SAAS,EAAC,OAAO;UAACC,KAAK,EAAE;YAAEK,MAAM,EAAE;UAAI,CAAE;UAAAD,QAAA,GAAEpB,aAAa,CAAC,CAAC,EAAC,IAAE,EAACJ,WAAW,CAACkB,IAAI,CAACzB,KAAK,CAAC;QAAA;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1F,CAAC;IAEV;IACA,OAAO,IAAI;EACb,CAAC;EAED,IAAI3C,OAAO,IAAIZ,UAAU,CAACc,MAAM,KAAK,CAAC,EAAE;IACtC,oBAAOjB,OAAA;MAAK+C,SAAS,EAAC,SAAS;MAAAK,QAAA,EAAC;IAAmC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3E;EAEA,oBACE1D,OAAA;IAAK+C,SAAS,EAAC,4BAA4B;IAAAK,QAAA,gBACzCpD,OAAA;MAAAoD,QAAA,GAAI,oBAAkB,EAACrB,aAAa,CAAC,CAAC;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5C1D,OAAA;MAAK+C,SAAS,EAAC,wBAAwB;MAACC,KAAK,EAAE;QAAEW,MAAM,EAAE,OAAO;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAR,QAAA,eACvFpD,OAAA,CAACJ,mBAAmB;QAACiE,KAAK,EAAC,MAAM;QAACF,MAAM,EAAC,MAAM;QAAAP,QAAA,eAC7CpD,OAAA,CAACX,QAAQ;UACPyD,IAAI,EAAET,gBAAgB,CAAC,CAAE;UACzBgB,MAAM,EAAE;YAAES,GAAG,EAAE,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,IAAI,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAG,CAAE;UAAAb,QAAA,gBAErDpD,OAAA,CAACP,aAAa;YAACyE,eAAe,EAAC;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvC1D,OAAA,CAACT,KAAK;YACJ4E,OAAO,EAAC,MAAM;YACdC,KAAK,EAAE,CAAC,EAAG;YACXC,UAAU,EAAC,KAAK;YAChBV,MAAM,EAAE,EAAG;YACXW,IAAI,EAAE;cAAEC,QAAQ,EAAE;YAAG;UAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACF1D,OAAA,CAACR,KAAK;YACJqD,KAAK,EAAE;cACLxB,KAAK,EAAEW,aAAa,CAAC,CAAC;cACtBoC,KAAK,EAAE,CAAC,EAAE;cACVI,QAAQ,EAAE,YAAY;cACtBxB,KAAK,EAAE;gBAAEqB,UAAU,EAAE;cAAS;YAChC;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACF1D,OAAA,CAACN,OAAO;YAAC+E,OAAO,eAAEzE,OAAA,CAAC0C,aAAa;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvC1D,OAAA,CAACL,MAAM;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACV1D,OAAA,CAACV,GAAG;YACF6E,OAAO,EAAC,OAAO;YACf/B,IAAI,EAAEJ,aAAa,CAAC,CAAE;YACtBS,IAAI,EAAC,SAAS;YACdiC,iBAAiB,EAAE;UAAK;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAEN1D,OAAA;MAAK+C,SAAS,EAAC,mBAAmB;MAAAK,QAAA,gBAChCpD,OAAA;QAAK+C,SAAS,EAAC,iBAAiB;QAAAK,QAAA,gBAC9BpD,OAAA;UAAAoD,QAAA,GAAI,wBAAsB,EAAClD,iBAAiB,KAAK,QAAQ,GAAG,uBAAuB,GAAG,kBAAkB;QAAA;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9G1D,OAAA;UAAI+C,SAAS,EAAC,cAAc;UAAAK,QAAA,EACzBzC,SAAS,CAAC2B,GAAG,CAAClB,KAAK,iBAClBpB,OAAA;YAAqB+C,SAAS,EAAC,cAAc;YAAAK,QAAA,gBAC3CpD,OAAA;cAAM+C,SAAS,EAAC,YAAY;cAAAK,QAAA,EAAEhC,KAAK,CAACgB;YAAI;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChD1D,OAAA;cAAM+C,SAAS,EAAC,aAAa;cAAAK,QAAA,EAAExB,WAAW,CAACR,KAAK,CAACC,KAAK;YAAC;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAFxDtC,KAAK,CAACmB,IAAI;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGf,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEN1D,OAAA;QAAK+C,SAAS,EAAC,iBAAiB;QAAAK,QAAA,gBAC9BpD,OAAA;UAAAoD,QAAA,GAAI,2BAAyB,EAAClD,iBAAiB,KAAK,QAAQ,GAAG,wBAAwB,GAAG,iBAAiB;QAAA;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjH1D,OAAA;UAAI+C,SAAS,EAAC,cAAc;UAAAK,QAAA,EACzBvC,YAAY,CAACyB,GAAG,CAAClB,KAAK,iBACrBpB,OAAA;YAAqB+C,SAAS,EAAC,cAAc;YAAAK,QAAA,gBAC3CpD,OAAA;cAAM+C,SAAS,EAAC,YAAY;cAAAK,QAAA,EAAEhC,KAAK,CAACgB;YAAI;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChD1D,OAAA;cAAM+C,SAAS,EAAC,aAAa;cAAAK,QAAA,EAAExB,WAAW,CAACR,KAAK,CAACC,KAAK;YAAC;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAFxDtC,KAAK,CAACmB,IAAI;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGf,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN1D,OAAA;MAAK+C,SAAS,EAAC,wBAAwB;MAAAK,QAAA,eACrCpD,OAAA;QAAAoD,QAAA,gBACEpD,OAAA;UAAAoD,QAAA,EAAQ;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACxD,iBAAiB,KAAK,QAAQ,GACtD,mHAAAG,WAAA,GAAkHM,SAAS,CAAC,CAAC,CAAC,cAAAN,WAAA,uBAAZA,WAAA,CAAc+B,IAAI,wCAAwCR,WAAW,EAAAtB,YAAA,GAACK,SAAS,CAAC,CAAC,CAAC,cAAAL,YAAA,uBAAZA,YAAA,CAAce,KAAK,CAAC,GAAG,GAC/MnB,iBAAiB,KAAK,OAAO,GAC3B,sEAAAK,YAAA,GAAqEI,SAAS,CAAC,CAAC,CAAC,cAAAJ,YAAA,uBAAZA,YAAA,CAAc6B,IAAI,oDAAoDR,WAAW,EAAApB,YAAA,GAACG,SAAS,CAAC,CAAC,CAAC,cAAAH,YAAA,uBAAZA,YAAA,CAAca,KAAK,CAAC,uEAAuE,GAClP,2EAAAZ,YAAA,GAA0EE,SAAS,CAAC,CAAC,CAAC,cAAAF,YAAA,uBAAZA,YAAA,CAAc2B,IAAI,yCAAyCR,WAAW,EAAAlB,YAAA,GAACC,SAAS,CAAC,CAAC,CAAC,cAAAD,YAAA,uBAAZA,YAAA,CAAcW,KAAK,CAAC,oDAAoD;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9N;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtD,EAAA,CApLIH,wBAAwB;AAAA0E,EAAA,GAAxB1E,wBAAwB;AAsL9B,eAAeA,wBAAwB;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}