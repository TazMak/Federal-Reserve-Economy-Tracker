{"ast":null,"code":"import React,{useRef,useEffect}from'react';import Chart from'chart.js/auto';/**\n * YieldCurve component for displaying Treasury yield curve\n * @param {Object} props - Component props\n * @param {Object} props.data - Yield curve data object with maturities as keys and yields as values\n * @param {string} props.date - Date of the yield curve data\n */import{jsx as _jsx}from\"react/jsx-runtime\";const YieldCurve=_ref=>{let{data={},date=''}=_ref;const chartRef=useRef(null);const chartInstance=useRef(null);useEffect(()=>{// If chart already exists, destroy it before creating a new one\nif(chartInstance.current){chartInstance.current.destroy();}if(!data||Object.keys(data).length===0||!chartRef.current){return;}const ctx=chartRef.current.getContext('2d');// Define the standard order of Treasury maturities\nconst maturities=['1 Mo','3 Mo','6 Mo','1 Yr','2 Yr','3 Yr','5 Yr','7 Yr','10 Yr','20 Yr','30 Yr'];// Filter and sort the data based on available maturities\nconst filteredMaturities=maturities.filter(maturity=>data[maturity]!==undefined);const yields=filteredMaturities.map(maturity=>data[maturity]);// Prepare chart data\nconst chartData={labels:filteredMaturities,datasets:[{label:'Treasury Yield Curve',data:yields,borderColor:'#3366cc',backgroundColor:'rgba(51, 102, 204, 0.1)',borderWidth:3,fill:true,tension:0.4,pointRadius:5,pointHoverRadius:7}]};// Create new chart\nchartInstance.current=new Chart(ctx,{type:'line',data:chartData,options:{responsive:true,maintainAspectRatio:false,plugins:{title:{display:true,text:`Treasury Yield Curve (${date})`,font:{size:16}},legend:{display:false},tooltip:{callbacks:{label:function(context){return`${context.parsed.y.toFixed(2)}%`;}}}},scales:{x:{title:{display:true,text:'Maturity',font:{weight:'bold'}},grid:{display:false}},y:{title:{display:true,text:'Yield (%)',font:{weight:'bold'}},grid:{color:'#eee'},ticks:{callback:function(value){return value.toFixed(2)+'%';}}}}}});// Cleanup function\nreturn()=>{if(chartInstance.current){chartInstance.current.destroy();}};},[data,date]);return/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",style:{height:'350px'},children:/*#__PURE__*/_jsx(\"canvas\",{ref:chartRef})});};export default YieldCurve;","map":{"version":3,"names":["React","useRef","useEffect","Chart","jsx","_jsx","YieldCurve","_ref","data","date","chartRef","chartInstance","current","destroy","Object","keys","length","ctx","getContext","maturities","filteredMaturities","filter","maturity","undefined","yields","map","chartData","labels","datasets","label","borderColor","backgroundColor","borderWidth","fill","tension","pointRadius","pointHoverRadius","type","options","responsive","maintainAspectRatio","plugins","title","display","text","font","size","legend","tooltip","callbacks","context","parsed","y","toFixed","scales","x","weight","grid","color","ticks","callback","value","className","style","height","children","ref"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/charts/YieldCurve.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\n\n/**\n * YieldCurve component for displaying Treasury yield curve\n * @param {Object} props - Component props\n * @param {Object} props.data - Yield curve data object with maturities as keys and yields as values\n * @param {string} props.date - Date of the yield curve data\n */\nconst YieldCurve = ({ \n  data = {}, \n  date = '' \n}) => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  useEffect(() => {\n    // If chart already exists, destroy it before creating a new one\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    \n    if (!data || Object.keys(data).length === 0 || !chartRef.current) {\n      return;\n    }\n    \n    const ctx = chartRef.current.getContext('2d');\n    \n    // Define the standard order of Treasury maturities\n    const maturities = ['1 Mo', '3 Mo', '6 Mo', '1 Yr', '2 Yr', '3 Yr', '5 Yr', '7 Yr', '10 Yr', '20 Yr', '30 Yr'];\n    \n    // Filter and sort the data based on available maturities\n    const filteredMaturities = maturities.filter(maturity => data[maturity] !== undefined);\n    const yields = filteredMaturities.map(maturity => data[maturity]);\n    \n    // Prepare chart data\n    const chartData = {\n      labels: filteredMaturities,\n      datasets: [\n        {\n          label: 'Treasury Yield Curve',\n          data: yields,\n          borderColor: '#3366cc',\n          backgroundColor: 'rgba(51, 102, 204, 0.1)',\n          borderWidth: 3,\n          fill: true,\n          tension: 0.4,\n          pointRadius: 5,\n          pointHoverRadius: 7\n        }\n      ]\n    };\n    \n    // Create new chart\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          title: {\n            display: true,\n            text: `Treasury Yield Curve (${date})`,\n            font: {\n              size: 16\n            }\n          },\n          legend: {\n            display: false,\n          },\n          tooltip: {\n            callbacks: {\n              label: function(context) {\n                return `${context.parsed.y.toFixed(2)}%`;\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Maturity',\n              font: {\n                weight: 'bold'\n              }\n            },\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Yield (%)',\n              font: {\n                weight: 'bold'\n              }\n            },\n            grid: {\n              color: '#eee'\n            },\n            ticks: {\n              callback: function(value) {\n                return value.toFixed(2) + '%';\n              }\n            }\n          }\n        }\n      }\n    });\n    \n    // Cleanup function\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data, date]);\n\n  return (\n    <div className=\"chart-container\" style={{ height: '350px' }}>\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n};\n\nexport default YieldCurve;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}