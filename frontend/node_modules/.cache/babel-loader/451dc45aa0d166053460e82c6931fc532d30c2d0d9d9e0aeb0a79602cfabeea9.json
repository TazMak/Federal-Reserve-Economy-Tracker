{"ast":null,"code":"import{format,parseISO,subYears,subMonths}from'date-fns';/**\n * Format a date string to display format\n * @param {string} dateString - ISO date string\n * @param {string} formatStr - Format string\n * @returns {string} Formatted date string\n */export const formatDate=function(dateString){let formatStr=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'MMM d, yyyy';try{const date=parseISO(dateString);return format(date,formatStr);}catch(error){console.error('Error formatting date:',error);return dateString;}};/**\n * Get date range for time periods\n * @param {string} period - Time periods\n * @returns {Object} Start and end dates\n */export const getDateRange=period=>{const today=new Date();const endDate=format(today,'yyyy-MM-dd');let startDate;switch(period){case'1y':startDate=format(subYears(today,1),'yyyy-MM-dd');break;case'5y':startDate=format(subYears(today,5),'yyyy-MM-dd');break;case'10y':startDate=format(subYears(today,10),'yyyy-MM-dd');break;case'ytd':startDate=`${today.getFullYear()}-01-01`;break;case'6m':startDate=format(subMonths(today,6),'yyyy-MM-dd');break;case'all':default:startDate=format(subYears(today,20),'yyyy-MM-dd');// default setting is to 20 years\nbreak;}return{startDate,endDate};};","map":{"version":3,"names":["format","parseISO","subYears","subMonths","formatDate","dateString","formatStr","arguments","length","undefined","date","error","console","getDateRange","period","today","Date","endDate","startDate","getFullYear"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/utils/dateUtils.js"],"sourcesContent":["import { format, parseISO, subYears, subMonths } from 'date-fns';\n\n/**\n * Format a date string to display format\n * @param {string} dateString - ISO date string\n * @param {string} formatStr - Format string\n * @returns {string} Formatted date string\n */\nexport const formatDate = (dateString, formatStr = 'MMM d, yyyy') => {\n  try {\n    const date = parseISO(dateString);\n    return format(date, formatStr);\n  } catch (error) {\n    console.error('Error formatting date:', error);\n    return dateString;\n  }\n};\n\n/**\n * Get date range for time periods\n * @param {string} period - Time periods\n * @returns {Object} Start and end dates\n */\nexport const getDateRange = (period) => {\n  const today = new Date();\n  const endDate = format(today, 'yyyy-MM-dd');\n  let startDate;\n\n  switch (period) {\n    case '1y':\n      startDate = format(subYears(today, 1), 'yyyy-MM-dd');\n      break;\n    case '5y':\n      startDate = format(subYears(today, 5), 'yyyy-MM-dd');\n      break;\n    case '10y':\n      startDate = format(subYears(today, 10), 'yyyy-MM-dd');\n      break;\n    case 'ytd':\n      startDate = `${today.getFullYear()}-01-01`;\n      break;\n    case '6m':\n      startDate = format(subMonths(today, 6), 'yyyy-MM-dd');\n      break;\n    case 'all':\n    default:\n      startDate = format(subYears(today, 20), 'yyyy-MM-dd'); // default setting is to 20 years\n      break;\n  }\n\n  return { startDate, endDate };\n};"],"mappings":"AAAA,OAASA,MAAM,CAAEC,QAAQ,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,UAAU,CAEhE;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,UAAU,CAAG,QAAAA,CAACC,UAAU,CAAgC,IAA9B,CAAAC,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,aAAa,CAC9D,GAAI,CACF,KAAM,CAAAG,IAAI,CAAGT,QAAQ,CAACI,UAAU,CAAC,CACjC,MAAO,CAAAL,MAAM,CAACU,IAAI,CAAEJ,SAAS,CAAC,CAChC,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,CAAAN,UAAU,CACnB,CACF,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAQ,YAAY,CAAIC,MAAM,EAAK,CACtC,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACxB,KAAM,CAAAC,OAAO,CAAGjB,MAAM,CAACe,KAAK,CAAE,YAAY,CAAC,CAC3C,GAAI,CAAAG,SAAS,CAEb,OAAQJ,MAAM,EACZ,IAAK,IAAI,CACPI,SAAS,CAAGlB,MAAM,CAACE,QAAQ,CAACa,KAAK,CAAE,CAAC,CAAC,CAAE,YAAY,CAAC,CACpD,MACF,IAAK,IAAI,CACPG,SAAS,CAAGlB,MAAM,CAACE,QAAQ,CAACa,KAAK,CAAE,CAAC,CAAC,CAAE,YAAY,CAAC,CACpD,MACF,IAAK,KAAK,CACRG,SAAS,CAAGlB,MAAM,CAACE,QAAQ,CAACa,KAAK,CAAE,EAAE,CAAC,CAAE,YAAY,CAAC,CACrD,MACF,IAAK,KAAK,CACRG,SAAS,CAAG,GAAGH,KAAK,CAACI,WAAW,CAAC,CAAC,QAAQ,CAC1C,MACF,IAAK,IAAI,CACPD,SAAS,CAAGlB,MAAM,CAACG,SAAS,CAACY,KAAK,CAAE,CAAC,CAAC,CAAE,YAAY,CAAC,CACrD,MACF,IAAK,KAAK,CACV,QACEG,SAAS,CAAGlB,MAAM,CAACE,QAAQ,CAACa,KAAK,CAAE,EAAE,CAAC,CAAE,YAAY,CAAC,CAAE;AACvD,MACJ,CAEA,MAAO,CAAEG,SAAS,CAAED,OAAQ,CAAC,CAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}