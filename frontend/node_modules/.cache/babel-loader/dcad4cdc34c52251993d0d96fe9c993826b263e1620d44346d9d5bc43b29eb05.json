{"ast":null,"code":"var _jsxFileName = \"/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/RegionalData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\n\n// URL for US states GeoJSON data - standard format for geographic mapping\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n/**\n * RegionalData component for displaying economic data by state on an interactive map\n * Uses react-simple-maps library instead of direct SVG path elements\n */\nconst RegionalData = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hoveredState, setHoveredState] = useState(null);\n  const [selectedIndicator, setSelectedIndicator] = useState('MSPUS'); // Default to Median House Price\n  const [stateData, setStateData] = useState({});\n  const [colorScale, setColorScale] = useState(() => scaleLinear().domain([0, 1]).range([\"#ff0000\", \"#00ff00\"]));\n  const [minValue, setMinValue] = useState(null);\n  const [maxValue, setMaxValue] = useState(null);\n\n  // Available indicators\n  const indicators = [{\n    id: 'UNRATE',\n    name: 'Unemployment Rate'\n  }, {\n    id: 'MSPUS',\n    name: 'Median House Price'\n  }, {\n    id: 'PCPI',\n    name: 'Per Capita Personal Income'\n  }];\n\n  // Fetch data for all states\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // For development/testing if API is not available\n        let response;\n        try {\n          response = await axios.get(`/api/regional/${selectedIndicator}`);\n        } catch (err) {\n          // Fallback to simulated data if API fails\n          console.warn(\"Using simulated data due to API error:\", err);\n          response = {\n            data: generateSimulatedData(selectedIndicator)\n          };\n        }\n\n        // Process data for map coloring\n        const states = {};\n        const values = [];\n\n        // Extract valid values for creating color scale\n        response.data.states.forEach(state => {\n          states[state.code] = state;\n          if (state.value !== null && state.value !== undefined) {\n            values.push(state.value);\n          }\n        });\n        if (values.length > 0) {\n          // Get min/max values for normalization\n          const min = Math.min(...values);\n          const max = Math.max(...values);\n          setMinValue(min);\n          setMaxValue(max);\n\n          // Create color scale based on indicator type\n          if (selectedIndicator === 'UNRATE') {\n            // For unemployment, low is good (green), high is bad (red)\n            setColorScale(scaleLinear().domain([min, max]).range([\"rgb(0, 255, 0)\", \"rgb(255, 0, 0)\"]));\n          } else {\n            // For income/housing prices, high is good (green), low is bad (red)\n            setColorScale(scaleLinear().domain([min, max]).range([\"rgb(255, 0, 0)\", \"rgb(0, 255, 0)\"]));\n          }\n        }\n        setStateData(states);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching regional data:', err);\n        setError('Failed to load regional data. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [selectedIndicator]);\n\n  // Generate simulated data for testing when API is not available\n  const generateSimulatedData = indicator => {\n    var _indicators$find;\n    const stateCodes = ['AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY', 'DC'];\n    const stateNames = {\n      'AL': 'Alabama',\n      'AK': 'Alaska',\n      'AZ': 'Arizona',\n      'AR': 'Arkansas',\n      'CA': 'California',\n      'CO': 'Colorado',\n      'CT': 'Connecticut',\n      'DE': 'Delaware',\n      'FL': 'Florida',\n      'GA': 'Georgia',\n      'HI': 'Hawaii',\n      'ID': 'Idaho',\n      'IL': 'Illinois',\n      'IN': 'Indiana',\n      'IA': 'Iowa',\n      'KS': 'Kansas',\n      'KY': 'Kentucky',\n      'LA': 'Louisiana',\n      'ME': 'Maine',\n      'MD': 'Maryland',\n      'MA': 'Massachusetts',\n      'MI': 'Michigan',\n      'MN': 'Minnesota',\n      'MS': 'Mississippi',\n      'MO': 'Missouri',\n      'MT': 'Montana',\n      'NE': 'Nebraska',\n      'NV': 'Nevada',\n      'NH': 'New Hampshire',\n      'NJ': 'New Jersey',\n      'NM': 'New Mexico',\n      'NY': 'New York',\n      'NC': 'North Carolina',\n      'ND': 'North Dakota',\n      'OH': 'Ohio',\n      'OK': 'Oklahoma',\n      'OR': 'Oregon',\n      'PA': 'Pennsylvania',\n      'RI': 'Rhode Island',\n      'SC': 'South Carolina',\n      'SD': 'South Dakota',\n      'TN': 'Tennessee',\n      'TX': 'Texas',\n      'UT': 'Utah',\n      'VT': 'Vermont',\n      'VA': 'Virginia',\n      'WA': 'Washington',\n      'WV': 'West Virginia',\n      'WI': 'Wisconsin',\n      'WY': 'Wyoming',\n      'DC': 'District of Columbia'\n    };\n    let minVal, maxVal;\n    switch (indicator) {\n      case 'UNRATE':\n        minVal = 2.5;\n        maxVal = 8.0;\n        break;\n      case 'MSPUS':\n        minVal = 150000;\n        maxVal = 750000;\n        break;\n      case 'PCPI':\n        minVal = 35000;\n        maxVal = 80000;\n        break;\n      default:\n        minVal = 0;\n        maxVal = 100;\n    }\n    const states = stateCodes.map(code => {\n      // Generate a random value between min and max\n      const value = Math.round(minVal + Math.random() * (maxVal - minVal));\n      const date = '2025-01-15'; // Simulated recent date\n\n      return {\n        code,\n        name: stateNames[code],\n        value,\n        date\n      };\n    });\n    return {\n      indicator,\n      name: ((_indicators$find = indicators.find(ind => ind.id === indicator)) === null || _indicators$find === void 0 ? void 0 : _indicators$find.name) || indicator,\n      units: indicator === 'UNRATE' ? 'percent' : 'dollars',\n      states\n    };\n  };\n\n  // Handle indicator change\n  const handleIndicatorChange = e => {\n    setSelectedIndicator(e.target.value);\n  };\n\n  // Handle state hover\n  const handleStateMouseEnter = geo => {\n    // Get the state code from the geo properties\n    const stateCode = geo.properties.postal;\n    setHoveredState(stateCode);\n  };\n\n  // Handle mouse leave\n  const handleStateMouseLeave = () => {\n    setHoveredState(null);\n  };\n\n  // Format value based on indicator type\n  const formatValue = (value, indicator) => {\n    if (value === null || value === undefined) return 'No data available';\n    switch (indicator) {\n      case 'UNRATE':\n        return `${value.toFixed(1)}%`;\n      case 'MSPUS':\n        return `$${value.toLocaleString()}`;\n      case 'PCPI':\n        return `$${value.toLocaleString()}`;\n      default:\n        return value.toLocaleString();\n    }\n  };\n\n  // Get indicator friendly name\n  const getIndicatorName = indicator => {\n    const ind = indicators.find(i => i.id === indicator);\n    return ind ? ind.name : indicator;\n  };\n\n  // Show hovered state info\n  const renderStateInfo = () => {\n    if (!hoveredState || !stateData[hoveredState]) {\n      return null;\n    }\n    const state = stateData[hoveredState];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: getIndicatorName(selectedIndicator)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatValue(state.value, selectedIndicator)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-date\",\n          children: [\"As of \", state.date || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"economic-overview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Economic Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: state.overview || `${state.name}'s ${selectedIndicator === 'UNRATE' ? 'unemployment rate' : selectedIndicator === 'MSPUS' ? 'housing market' : 'personal income'} \n              shows ${state.value !== null ? selectedIndicator === 'UNRATE' ? state.value < 4 ? 'strong performance' : state.value < 6 ? 'moderate performance' : 'challenges' : selectedIndicator === 'MSPUS' ? state.value > 400000 ? 'high prices' : 'moderate prices' : state.value > 60000 ? 'high income levels' : 'moderate income levels' : 'no data available'}.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regional-data indicator-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Regional Economic Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"indicator-select\",\n          children: \"Select Indicator: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"indicator-select\",\n          value: selectedIndicator,\n          onChange: handleIndicatorChange,\n          children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: indicator.id,\n            children: indicator.name\n          }, indicator.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading regional data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regional-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-and-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"us-map-container\",\n          children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n            projection: \"geoAlbersUsa\",\n            projectionConfig: {\n              scale: 1000\n            },\n            children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n              children: /*#__PURE__*/_jsxDEV(Geographies, {\n                geography: geoUrl,\n                children: ({\n                  geographies\n                }) => geographies.map(geo => {\n                  const stateCode = geo.properties.postal;\n                  const state = stateData[stateCode];\n\n                  // Default gray color for states with no data\n                  let fillColor = \"#D3D3D3\";\n\n                  // Apply colorScale for states with data\n                  if (state && state.value !== null && state.value !== undefined) {\n                    fillColor = colorScale(state.value);\n                  }\n                  return /*#__PURE__*/_jsxDEV(Geography, {\n                    geography: geo,\n                    fill: fillColor,\n                    stroke: \"#FFFFFF\",\n                    strokeWidth: 0.5,\n                    style: {\n                      default: {\n                        outline: \"none\"\n                      },\n                      hover: {\n                        outline: \"none\",\n                        stroke: \"#000\",\n                        strokeWidth: 1.5,\n                        cursor: \"pointer\"\n                      },\n                      pressed: {\n                        outline: \"none\"\n                      }\n                    },\n                    onMouseEnter: () => handleStateMouseEnter(geo),\n                    onMouseLeave: handleStateMouseLeave\n                  }, geo.rsmKey, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"state-info-panel\",\n          children: hoveredState ? renderStateInfo() : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"default-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Hover over a state to view details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Currently displaying: \", getIndicatorName(selectedIndicator)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Legend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-items\",\n          children: [selectedIndicator === 'UNRATE' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-color\",\n                style: {\n                  background: 'rgb(0, 255, 0)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Low Unemployment (\", minValue === null || minValue === void 0 ? void 0 : minValue.toFixed(1), \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-color\",\n                style: {\n                  background: 'rgb(255, 0, 0)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"High Unemployment (\", maxValue === null || maxValue === void 0 ? void 0 : maxValue.toFixed(1), \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-color\",\n                style: {\n                  background: 'rgb(0, 255, 0)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"High \", selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income', \"(\", selectedIndicator === 'MSPUS' || selectedIndicator === 'PCPI' ? '$' + (maxValue === null || maxValue === void 0 ? void 0 : maxValue.toLocaleString()) : maxValue, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-color\",\n                style: {\n                  background: 'rgb(255, 0, 0)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Low \", selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income', \"(\", selectedIndicator === 'MSPUS' || selectedIndicator === 'PCPI' ? '$' + (minValue === null || minValue === void 0 ? void 0 : minValue.toLocaleString()) : minValue, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                background: '#D3D3D3'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"No Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionalData, \"kQJSFloTadmz4fP1spr4UDOYFaI=\");\n_c = RegionalData;\nexport default RegionalData;\nvar _c;\n$RefreshReg$(_c, \"RegionalData\");","map":{"version":3,"names":["React","useState","useEffect","axios","ComposableMap","Geographies","Geography","ZoomableGroup","scaleLinear","jsxDEV","_jsxDEV","Fragment","_Fragment","geoUrl","RegionalData","_s","loading","setLoading","error","setError","hoveredState","setHoveredState","selectedIndicator","setSelectedIndicator","stateData","setStateData","colorScale","setColorScale","domain","range","minValue","setMinValue","maxValue","setMaxValue","indicators","id","name","fetchData","response","get","err","console","warn","data","generateSimulatedData","states","values","forEach","state","code","value","undefined","push","length","min","Math","max","indicator","_indicators$find","stateCodes","stateNames","minVal","maxVal","map","round","random","date","find","ind","units","handleIndicatorChange","e","target","handleStateMouseEnter","geo","stateCode","properties","postal","handleStateMouseLeave","formatValue","toFixed","toLocaleString","getIndicatorName","i","renderStateInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","overview","htmlFor","onChange","projection","projectionConfig","scale","geography","geographies","fillColor","fill","stroke","strokeWidth","style","default","outline","hover","cursor","pressed","onMouseEnter","onMouseLeave","rsmKey","background","_c","$RefreshReg$"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/RegionalData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { \n  ComposableMap, \n  Geographies, \n  Geography, \n  ZoomableGroup \n} from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\n\n// URL for US states GeoJSON data - standard format for geographic mapping\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n/**\n * RegionalData component for displaying economic data by state on an interactive map\n * Uses react-simple-maps library instead of direct SVG path elements\n */\nconst RegionalData = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hoveredState, setHoveredState] = useState(null);\n  const [selectedIndicator, setSelectedIndicator] = useState('MSPUS'); // Default to Median House Price\n  const [stateData, setStateData] = useState({});\n  const [colorScale, setColorScale] = useState(() => scaleLinear().domain([0, 1]).range([\"#ff0000\", \"#00ff00\"]));\n  const [minValue, setMinValue] = useState(null);\n  const [maxValue, setMaxValue] = useState(null);\n\n  // Available indicators\n  const indicators = [\n    { id: 'UNRATE', name: 'Unemployment Rate' },\n    { id: 'MSPUS', name: 'Median House Price' },\n    { id: 'PCPI', name: 'Per Capita Personal Income' }\n  ];\n\n  // Fetch data for all states\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // For development/testing if API is not available\n        let response;\n        try {\n          response = await axios.get(`/api/regional/${selectedIndicator}`);\n        } catch (err) {\n          // Fallback to simulated data if API fails\n          console.warn(\"Using simulated data due to API error:\", err);\n          response = { data: generateSimulatedData(selectedIndicator) };\n        }\n        \n        // Process data for map coloring\n        const states = {};\n        const values = [];\n        \n        // Extract valid values for creating color scale\n        response.data.states.forEach(state => {\n          states[state.code] = state;\n          if (state.value !== null && state.value !== undefined) {\n            values.push(state.value);\n          }\n        });\n        \n        if (values.length > 0) {\n          // Get min/max values for normalization\n          const min = Math.min(...values);\n          const max = Math.max(...values);\n          setMinValue(min);\n          setMaxValue(max);\n          \n          // Create color scale based on indicator type\n          if (selectedIndicator === 'UNRATE') {\n            // For unemployment, low is good (green), high is bad (red)\n            setColorScale(scaleLinear()\n              .domain([min, max])\n              .range([\"rgb(0, 255, 0)\", \"rgb(255, 0, 0)\"]));\n          } else {\n            // For income/housing prices, high is good (green), low is bad (red)\n            setColorScale(scaleLinear()\n              .domain([min, max])\n              .range([\"rgb(255, 0, 0)\", \"rgb(0, 255, 0)\"]));\n          }\n        }\n        \n        setStateData(states);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching regional data:', err);\n        setError('Failed to load regional data. Please try again later.');\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [selectedIndicator]);\n\n  // Generate simulated data for testing when API is not available\n  const generateSimulatedData = (indicator) => {\n    const stateCodes = [\n      'AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', \n      'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', \n      'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', \n      'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', \n      'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY', 'DC'\n    ];\n    \n    const stateNames = {\n      'AL': 'Alabama', 'AK': 'Alaska', 'AZ': 'Arizona', 'AR': 'Arkansas',\n      'CA': 'California', 'CO': 'Colorado', 'CT': 'Connecticut', 'DE': 'Delaware',\n      'FL': 'Florida', 'GA': 'Georgia', 'HI': 'Hawaii', 'ID': 'Idaho',\n      'IL': 'Illinois', 'IN': 'Indiana', 'IA': 'Iowa', 'KS': 'Kansas',\n      'KY': 'Kentucky', 'LA': 'Louisiana', 'ME': 'Maine', 'MD': 'Maryland',\n      'MA': 'Massachusetts', 'MI': 'Michigan', 'MN': 'Minnesota', 'MS': 'Mississippi',\n      'MO': 'Missouri', 'MT': 'Montana', 'NE': 'Nebraska', 'NV': 'Nevada',\n      'NH': 'New Hampshire', 'NJ': 'New Jersey', 'NM': 'New Mexico', 'NY': 'New York',\n      'NC': 'North Carolina', 'ND': 'North Dakota', 'OH': 'Ohio', 'OK': 'Oklahoma',\n      'OR': 'Oregon', 'PA': 'Pennsylvania', 'RI': 'Rhode Island', 'SC': 'South Carolina',\n      'SD': 'South Dakota', 'TN': 'Tennessee', 'TX': 'Texas', 'UT': 'Utah',\n      'VT': 'Vermont', 'VA': 'Virginia', 'WA': 'Washington', 'WV': 'West Virginia',\n      'WI': 'Wisconsin', 'WY': 'Wyoming', 'DC': 'District of Columbia'\n    };\n    \n    let minVal, maxVal;\n    \n    switch (indicator) {\n      case 'UNRATE':\n        minVal = 2.5;\n        maxVal = 8.0;\n        break;\n      case 'MSPUS':\n        minVal = 150000;\n        maxVal = 750000;\n        break;\n      case 'PCPI':\n        minVal = 35000;\n        maxVal = 80000;\n        break;\n      default:\n        minVal = 0;\n        maxVal = 100;\n    }\n    \n    const states = stateCodes.map(code => {\n      // Generate a random value between min and max\n      const value = Math.round(minVal + Math.random() * (maxVal - minVal));\n      const date = '2025-01-15'; // Simulated recent date\n      \n      return {\n        code,\n        name: stateNames[code],\n        value,\n        date\n      };\n    });\n    \n    return {\n      indicator,\n      name: indicators.find(ind => ind.id === indicator)?.name || indicator,\n      units: indicator === 'UNRATE' ? 'percent' : 'dollars',\n      states\n    };\n  };\n\n  // Handle indicator change\n  const handleIndicatorChange = (e) => {\n    setSelectedIndicator(e.target.value);\n  };\n\n  // Handle state hover\n  const handleStateMouseEnter = (geo) => {\n    // Get the state code from the geo properties\n    const stateCode = geo.properties.postal;\n    setHoveredState(stateCode);\n  };\n\n  // Handle mouse leave\n  const handleStateMouseLeave = () => {\n    setHoveredState(null);\n  };\n\n  // Format value based on indicator type\n  const formatValue = (value, indicator) => {\n    if (value === null || value === undefined) return 'No data available';\n    \n    switch (indicator) {\n      case 'UNRATE':\n        return `${value.toFixed(1)}%`;\n      case 'MSPUS':\n        return `$${value.toLocaleString()}`;\n      case 'PCPI':\n        return `$${value.toLocaleString()}`;\n      default:\n        return value.toLocaleString();\n    }\n  };\n\n  // Get indicator friendly name\n  const getIndicatorName = (indicator) => {\n    const ind = indicators.find(i => i.id === indicator);\n    return ind ? ind.name : indicator;\n  };\n  \n  // Show hovered state info\n  const renderStateInfo = () => {\n    if (!hoveredState || !stateData[hoveredState]) {\n      return null;\n    }\n    \n    const state = stateData[hoveredState];\n    \n    return (\n      <div className=\"state-details\">\n        <h3>{state.name}</h3>\n        <div className=\"state-metric\">\n          <h4>{getIndicatorName(selectedIndicator)}</h4>\n          <div className=\"metric-value\">\n            {formatValue(state.value, selectedIndicator)}\n          </div>\n          <div className=\"metric-date\">\n            As of {state.date || 'N/A'}\n          </div>\n        </div>\n        <div className=\"economic-overview\">\n          <h4>Economic Overview</h4>\n          <p>\n            {state.overview || \n              `${state.name}'s ${selectedIndicator === 'UNRATE' ? 'unemployment rate' : \n                selectedIndicator === 'MSPUS' ? 'housing market' : 'personal income'} \n              shows ${state.value !== null ? \n                selectedIndicator === 'UNRATE' ? \n                  state.value < 4 ? 'strong performance' : \n                  state.value < 6 ? 'moderate performance' : 'challenges' : \n                selectedIndicator === 'MSPUS' ? \n                  state.value > 400000 ? 'high prices' : 'moderate prices' : \n                  state.value > 60000 ? 'high income levels' : 'moderate income levels' \n                : 'no data available'}.`}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"regional-data indicator-page\">\n      <h2>Regional Economic Data</h2>\n      \n      <div className=\"controls\">\n        <div className=\"selector\">\n          <label htmlFor=\"indicator-select\">Select Indicator: </label>\n          <select \n            id=\"indicator-select\" \n            value={selectedIndicator} \n            onChange={handleIndicatorChange}\n          >\n            {indicators.map(indicator => (\n              <option key={indicator.id} value={indicator.id}>\n                {indicator.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      \n      {loading ? (\n        <div className=\"loading\">Loading regional data...</div>\n      ) : error ? (\n        <div className=\"error\">{error}</div>\n      ) : (\n        <div className=\"regional-content\">\n          <div className=\"map-and-details\">\n            <div className=\"us-map-container\">\n              <ComposableMap \n                projection=\"geoAlbersUsa\"\n                projectionConfig={{ scale: 1000 }}\n              >\n                <ZoomableGroup>\n                  <Geographies geography={geoUrl}>\n                    {({ geographies }) =>\n                      geographies.map(geo => {\n                        const stateCode = geo.properties.postal;\n                        const state = stateData[stateCode];\n                        \n                        // Default gray color for states with no data\n                        let fillColor = \"#D3D3D3\";\n                        \n                        // Apply colorScale for states with data\n                        if (state && state.value !== null && state.value !== undefined) {\n                          fillColor = colorScale(state.value);\n                        }\n                        \n                        return (\n                          <Geography\n                            key={geo.rsmKey}\n                            geography={geo}\n                            fill={fillColor}\n                            stroke=\"#FFFFFF\"\n                            strokeWidth={0.5}\n                            style={{\n                              default: {\n                                outline: \"none\"\n                              },\n                              hover: {\n                                outline: \"none\",\n                                stroke: \"#000\",\n                                strokeWidth: 1.5,\n                                cursor: \"pointer\"\n                              },\n                              pressed: {\n                                outline: \"none\"\n                              }\n                            }}\n                            onMouseEnter={() => handleStateMouseEnter(geo)}\n                            onMouseLeave={handleStateMouseLeave}\n                          />\n                        );\n                      })\n                    }\n                  </Geographies>\n                </ZoomableGroup>\n              </ComposableMap>\n            </div>\n            <div className=\"state-info-panel\">\n              {hoveredState ? renderStateInfo() : (\n                <div className=\"default-info\">\n                  <h3>Hover over a state to view details</h3>\n                  <p>Currently displaying: {getIndicatorName(selectedIndicator)}</p>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"legend\">\n            <h3>Legend</h3>\n            <div className=\"legend-items\">\n              {selectedIndicator === 'UNRATE' ? (\n                <>\n                  <div className=\"legend-item\">\n                    <div className=\"legend-color\" style={{ background: 'rgb(0, 255, 0)' }}></div>\n                    <span>Low Unemployment ({minValue?.toFixed(1)}%)</span>\n                  </div>\n                  <div className=\"legend-item\">\n                    <div className=\"legend-color\" style={{ background: 'rgb(255, 0, 0)' }}></div>\n                    <span>High Unemployment ({maxValue?.toFixed(1)}%)</span>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div className=\"legend-item\">\n                    <div className=\"legend-color\" style={{ background: 'rgb(0, 255, 0)' }}></div>\n                    <span>High {selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income'} \n                    ({selectedIndicator === 'MSPUS' || selectedIndicator === 'PCPI' ? '$' + maxValue?.toLocaleString() : maxValue})</span>\n                  </div>\n                  <div className=\"legend-item\">\n                    <div className=\"legend-color\" style={{ background: 'rgb(255, 0, 0)' }}></div>\n                    <span>Low {selectedIndicator === 'MSPUS' ? 'House Prices' : 'Income'}\n                    ({selectedIndicator === 'MSPUS' || selectedIndicator === 'PCPI' ? '$' + minValue?.toLocaleString() : minValue})</span>\n                  </div>\n                </>\n              )}\n              <div className=\"legend-item\">\n                <div className=\"legend-color\" style={{ background: '#D3D3D3' }}></div>\n                <span>No Data</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RegionalData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}