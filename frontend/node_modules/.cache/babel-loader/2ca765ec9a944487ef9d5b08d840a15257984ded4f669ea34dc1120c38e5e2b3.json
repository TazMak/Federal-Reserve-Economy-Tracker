{"ast":null,"code":"var _jsxFileName = \"/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/charts/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport { formatDate } from '../../utils/dateUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = ({\n  data,\n  xKey = 'date',\n  yKey = 'value',\n  color = '#1f77b4',\n  title = '',\n  tooltipFormatter = null\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    // If chart already exists, delete and create new one to refresh\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    if (!data || data.length === 0 || !chartRef.current) {\n      return;\n    }\n    const ctx = chartRef.current.getContext('2d');\n\n    // Prepare chart data\n    const chartData = {\n      labels: data.map(item => item[xKey]),\n      datasets: [{\n        label: title,\n        data: data.map(item => item[yKey]),\n        borderColor: color,\n        backgroundColor: color + '20',\n        // Add transparency\n        borderWidth: 2,\n        pointRadius: 1,\n        pointHoverRadius: 5,\n        fill: true,\n        tension: 0.1 // Slight curve for lines\n      }]\n    };\n\n    // Create new chart\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        interaction: {\n          mode: 'index',\n          intersect: false\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            callbacks: {\n              title: function (tooltipItems) {\n                // Format the date for tooltip title\n                return formatDate(tooltipItems[0].label);\n              },\n              label: function (context) {\n                let value = context.parsed.y;\n\n                // Use custom formatter if provided\n                if (tooltipFormatter) {\n                  return tooltipFormatter(value);\n                }\n\n                // Default formatting\n                return value.toFixed(2);\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              parser: 'yyyy-MM-dd',\n              tooltipFormat: 'MMM d, yyyy',\n              unit: 'month',\n              displayFormats: {\n                month: 'MMM yyyy'\n              }\n            },\n            title: {\n              display: false\n            },\n            grid: {\n              display: false\n            },\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 12\n            }\n          },\n          y: {\n            beginAtZero: false,\n            title: {\n              display: false\n            },\n            grid: {\n              color: '#eee'\n            }\n          }\n        }\n      }\n    });\n\n    // Cleanup function\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data, xKey, yKey, color, title, tooltipFormatter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      height: \"250\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","formatDate","jsxDEV","_jsxDEV","LineChart","data","xKey","yKey","color","title","tooltipFormatter","_s","chartRef","chartInstance","current","destroy","length","ctx","getContext","chartData","labels","map","item","datasets","label","borderColor","backgroundColor","borderWidth","pointRadius","pointHoverRadius","fill","tension","type","options","responsive","maintainAspectRatio","interaction","mode","intersect","plugins","legend","display","tooltip","callbacks","tooltipItems","context","value","parsed","y","toFixed","scales","x","time","parser","tooltipFormat","unit","displayFormats","month","grid","ticks","autoSkip","maxTicksLimit","beginAtZero","className","children","ref","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/charts/LineChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport { formatDate } from '../../utils/dateUtils';\n\nconst LineChart = ({ \n  data, \n  xKey = 'date', \n  yKey = 'value', \n  color = '#1f77b4',\n  title = '',\n  tooltipFormatter = null\n}) => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  useEffect(() => {\n    // If chart already exists, delete and create new one to refresh\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    \n    if (!data || data.length === 0 || !chartRef.current) {\n      return;\n    }\n    \n    const ctx = chartRef.current.getContext('2d');\n    \n    // Prepare chart data\n    const chartData = {\n      labels: data.map(item => item[xKey]),\n      datasets: [\n        {\n          label: title,\n          data: data.map(item => item[yKey]),\n          borderColor: color,\n          backgroundColor: color + '20', // Add transparency\n          borderWidth: 2,\n          pointRadius: 1,\n          pointHoverRadius: 5,\n          fill: true,\n          tension: 0.1 // Slight curve for lines\n        }\n      ]\n    };\n    \n    // Create new chart\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        interaction: {\n          mode: 'index',\n          intersect: false,\n        },\n        plugins: {\n          legend: {\n            display: false,\n          },\n          tooltip: {\n            callbacks: {\n              title: function(tooltipItems) {\n                // Format the date for tooltip title\n                return formatDate(tooltipItems[0].label);\n              },\n              label: function(context) {\n                let value = context.parsed.y;\n                \n                // Use custom formatter if provided\n                if (tooltipFormatter) {\n                  return tooltipFormatter(value);\n                }\n                \n                // Default formatting\n                return value.toFixed(2);\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              parser: 'yyyy-MM-dd',\n              tooltipFormat: 'MMM d, yyyy',\n              unit: 'month',\n              displayFormats: {\n                month: 'MMM yyyy'\n              }\n            },\n            title: {\n              display: false\n            },\n            grid: {\n              display: false\n            },\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 12\n            }\n          },\n          y: {\n            beginAtZero: false,\n            title: {\n              display: false\n            },\n            grid: {\n              color: '#eee'\n            }\n          }\n        }\n      }\n    });\n    \n    // Cleanup function\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data, xKey, yKey, color, title, tooltipFormatter]);\n\n  return (\n    <div className=\"chart-container\">\n      <canvas ref={chartRef} height=\"250\"></canvas>\n    </div>\n  );\n};\n\nexport default LineChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}