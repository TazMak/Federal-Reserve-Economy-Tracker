{"ast":null,"code":"var _jsxFileName = \"/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/RegionalData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nimport api from '../../services/api';\nimport { formatPercentage, formatCurrency, formatNumber } from '../../utils/formatUtils';\n\n// URL for US states topojson file - a standard format for US geographic data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n/**\n * RegionalData component for displaying economic data by state on an interactive map\n */\nconst RegionalData = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hoveredState, setHoveredState] = useState(null);\n  const [selectedIndicator, setSelectedIndicator] = useState('UNRATE'); // Default to Unemployment Rate\n  const [stateData, setStateData] = useState({});\n  const [colorScale, setColorScale] = useState(() => scaleLinear().domain([0, 10]).range([\"#00FF00\", \"#FF0000\"]));\n\n  // Available indicators\n  const indicators = [{\n    id: 'UNRATE',\n    name: 'Unemployment Rate'\n  }, {\n    id: 'MSPUS',\n    name: 'Median House Price'\n  }, {\n    id: 'PCPI',\n    name: 'Per Capita Personal Income'\n  }];\n\n  // Fetch data for all states\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await api.getRegionalData(selectedIndicator);\n\n        // Process the data\n        const states = {};\n        const values = [];\n        response.data.states.forEach(state => {\n          states[state.code] = state;\n          if (state.value !== null && state.value !== undefined) {\n            values.push(state.value);\n          }\n        });\n\n        // Get min/max values for normalization\n        const minValue = Math.min(...values);\n        const maxValue = Math.max(...values);\n\n        // Create color scale based on indicator type\n        let scale;\n        if (selectedIndicator === 'UNRATE') {\n          // For unemployment, low is good (green), high is bad (red)\n          scale = scaleLinear().domain([minValue, maxValue]).range([\"#00FF00\", \"#FF0000\"]);\n        } else {\n          // For income/housing prices, high is good (green), low is bad (red)\n          scale = scaleLinear().domain([minValue, maxValue]).range([\"#FF0000\", \"#00FF00\"]);\n        }\n        setColorScale(scale);\n        setStateData(states);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching regional data:', err);\n        setError('Failed to load regional data. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [selectedIndicator]);\n\n  // Handle indicator change\n  const handleIndicatorChange = e => {\n    setSelectedIndicator(e.target.value);\n  };\n\n  // Handle state hover\n  const handleStateMouseEnter = geo => {\n    // Get the state code from the geo properties\n    const stateCode = geo.properties.postal;\n    setHoveredState(stateCode);\n  };\n\n  // Handle mouse leave\n  const handleStateMouseLeave = () => {\n    setHoveredState(null);\n  };\n\n  // Format value based on indicator type\n  const formatValue = (value, indicator) => {\n    if (value === null || value === undefined) return 'No data available';\n    switch (indicator) {\n      case 'UNRATE':\n        return formatPercentage(value);\n      case 'MSPUS':\n        return formatCurrency(value, 'USD');\n      case 'PCPI':\n        return formatCurrency(value, 'USD');\n      default:\n        return formatNumber(value);\n    }\n  };\n\n  // Get indicator friendly name\n  const getIndicatorName = indicator => {\n    const ind = indicators.find(i => i.id === indicator);\n    return ind ? ind.name : indicator;\n  };\n\n  // Show hovered state info\n  const renderStateInfo = () => {\n    if (!hoveredState || !stateData[hoveredState]) {\n      return null;\n    }\n    const state = stateData[hoveredState];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: getIndicatorName(selectedIndicator)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: formatValue(state.value, selectedIndicator)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-date\",\n          children: [\"As of \", state.date || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"economic-overview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Economic Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: state.overview || `${state.name}'s ${selectedIndicator === 'UNRATE' ? 'unemployment rate' : selectedIndicator === 'MSPUS' ? 'housing market' : 'personal income'} \n              shows ${state.value !== null && state.value !== undefined ? selectedIndicator === 'UNRATE' ? state.value < 4 ? 'strong performance' : state.value < 6 ? 'moderate performance' : 'challenges' : selectedIndicator === 'MSPUS' ? state.value > 400000 ? 'high prices' : 'moderate prices' : state.value > 60000 ? 'high income levels' : 'moderate income levels' : 'no data available'}.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regional-data indicator-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Regional Economic Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"indicator-select\",\n          children: \"Select Indicator: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"indicator-select\",\n          value: selectedIndicator,\n          onChange: handleIndicatorChange,\n          children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: indicator.id,\n            children: indicator.name\n          }, indicator.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading regional data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regional-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-and-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"us-map-container\",\n          children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n            projection: \"geoAlbersUsa\",\n            width: 800,\n            height: 500,\n            children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n              children: /*#__PURE__*/_jsxDEV(Geographies, {\n                geography: geoUrl,\n                children: ({\n                  geographies\n                }) => geographies.map(geo => {\n                  const stateCode = geo.properties.postal;\n                  const currentState = stateData[stateCode];\n                  const fillColor = currentState && currentState.value !== null && currentState.value !== undefined ? colorScale(currentState.value) : \"#D3D3D3\"; // Gray for no data\n\n                  return /*#__PURE__*/_jsxDEV(Geography, {\n                    geography: geo,\n                    fill: fillColor,\n                    stroke: \"#FFFFFF\",\n                    strokeWidth: 0.5,\n                    style: {\n                      default: {\n                        outline: \"none\"\n                      },\n                      hover: {\n                        outline: \"none\",\n                        stroke: \"#000\",\n                        strokeWidth: 1,\n                        cursor: \"pointer\"\n                      },\n                      pressed: {\n                        outline: \"none\"\n                      }\n                    },\n                    onMouseEnter: () => handleStateMouseEnter(geo),\n                    onMouseLeave: handleStateMouseLeave\n                  }, geo.rsmKey, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"state-info-panel\",\n          children: hoveredState ? renderStateInfo() : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"default-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Hover over a state to view details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Currently displaying: \", getIndicatorName(selectedIndicator)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Legend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-items\",\n          children: [selectedIndicator === 'UNRATE' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-color\",\n                style: {\n                  background: '#00FF00'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Low Unemployment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-color\",\n                style: {\n                  background: '#FF0000'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"High Unemployment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-color\",\n                style: {\n                  background: '#00FF00'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"High \", selectedIndicator === 'MSPUS' ? 'Home Prices' : 'Income']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-color\",\n                style: {\n                  background: '#FF0000'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Low \", selectedIndicator === 'MSPUS' ? 'Home Prices' : 'Income']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                background: '#D3D3D3'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"No Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionalData, \"KVBEE1vKEFsg9/nvzQMS5GszRks=\");\n_c = RegionalData;\nexport default RegionalData;\nvar _c;\n$RefreshReg$(_c, \"RegionalData\");","map":{"version":3,"names":["React","useState","useEffect","ComposableMap","Geographies","Geography","ZoomableGroup","scaleLinear","api","formatPercentage","formatCurrency","formatNumber","jsxDEV","_jsxDEV","Fragment","_Fragment","geoUrl","RegionalData","_s","loading","setLoading","error","setError","hoveredState","setHoveredState","selectedIndicator","setSelectedIndicator","stateData","setStateData","colorScale","setColorScale","domain","range","indicators","id","name","fetchData","response","getRegionalData","states","values","data","forEach","state","code","value","undefined","push","minValue","Math","min","maxValue","max","scale","err","console","handleIndicatorChange","e","target","handleStateMouseEnter","geo","stateCode","properties","postal","handleStateMouseLeave","formatValue","indicator","getIndicatorName","ind","find","i","renderStateInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","date","overview","htmlFor","onChange","map","projection","width","height","geography","geographies","currentState","fillColor","fill","stroke","strokeWidth","style","default","outline","hover","cursor","pressed","onMouseEnter","onMouseLeave","rsmKey","background","_c","$RefreshReg$"],"sources":["/home/tazmak/Desktop/2024_Code/py-Projects/FRED-tracker/Federal-Reserve-Economy-Tracker/frontend/src/components/indicators/RegionalData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  ComposableMap, \n  Geographies, \n  Geography, \n  ZoomableGroup \n} from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nimport api from '../../services/api';\nimport { formatPercentage, formatCurrency, formatNumber } from '../../utils/formatUtils';\n\n// URL for US states topojson file - a standard format for US geographic data\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n/**\n * RegionalData component for displaying economic data by state on an interactive map\n */\nconst RegionalData = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hoveredState, setHoveredState] = useState(null);\n  const [selectedIndicator, setSelectedIndicator] = useState('UNRATE'); // Default to Unemployment Rate\n  const [stateData, setStateData] = useState({});\n  const [colorScale, setColorScale] = useState(() => scaleLinear().domain([0, 10]).range([\"#00FF00\", \"#FF0000\"]));\n\n  // Available indicators\n  const indicators = [\n    { id: 'UNRATE', name: 'Unemployment Rate' },\n    { id: 'MSPUS', name: 'Median House Price' },\n    { id: 'PCPI', name: 'Per Capita Personal Income' }\n  ];\n\n  // Fetch data for all states\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await api.getRegionalData(selectedIndicator);\n        \n        // Process the data\n        const states = {};\n        const values = [];\n        \n        response.data.states.forEach(state => {\n          states[state.code] = state;\n          if (state.value !== null && state.value !== undefined) {\n            values.push(state.value);\n          }\n        });\n        \n        // Get min/max values for normalization\n        const minValue = Math.min(...values);\n        const maxValue = Math.max(...values);\n        \n        // Create color scale based on indicator type\n        let scale;\n        \n        if (selectedIndicator === 'UNRATE') {\n          // For unemployment, low is good (green), high is bad (red)\n          scale = scaleLinear()\n            .domain([minValue, maxValue])\n            .range([\"#00FF00\", \"#FF0000\"]);\n        } else {\n          // For income/housing prices, high is good (green), low is bad (red)\n          scale = scaleLinear()\n            .domain([minValue, maxValue])\n            .range([\"#FF0000\", \"#00FF00\"]);\n        }\n        \n        setColorScale(scale);\n        setStateData(states);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching regional data:', err);\n        setError('Failed to load regional data. Please try again later.');\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [selectedIndicator]);\n\n  // Handle indicator change\n  const handleIndicatorChange = (e) => {\n    setSelectedIndicator(e.target.value);\n  };\n\n  // Handle state hover\n  const handleStateMouseEnter = (geo) => {\n    // Get the state code from the geo properties\n    const stateCode = geo.properties.postal;\n    setHoveredState(stateCode);\n  };\n\n  // Handle mouse leave\n  const handleStateMouseLeave = () => {\n    setHoveredState(null);\n  };\n\n  // Format value based on indicator type\n  const formatValue = (value, indicator) => {\n    if (value === null || value === undefined) return 'No data available';\n    \n    switch (indicator) {\n      case 'UNRATE':\n        return formatPercentage(value);\n      case 'MSPUS':\n        return formatCurrency(value, 'USD');\n      case 'PCPI':\n        return formatCurrency(value, 'USD');\n      default:\n        return formatNumber(value);\n    }\n  };\n\n  // Get indicator friendly name\n  const getIndicatorName = (indicator) => {\n    const ind = indicators.find(i => i.id === indicator);\n    return ind ? ind.name : indicator;\n  };\n  \n  // Show hovered state info\n  const renderStateInfo = () => {\n    if (!hoveredState || !stateData[hoveredState]) {\n      return null;\n    }\n    \n    const state = stateData[hoveredState];\n    \n    return (\n      <div className=\"state-details\">\n        <h3>{state.name}</h3>\n        <div className=\"state-metric\">\n          <h4>{getIndicatorName(selectedIndicator)}</h4>\n          <div className=\"metric-value\">\n            {formatValue(state.value, selectedIndicator)}\n          </div>\n          <div className=\"metric-date\">\n            As of {state.date || 'N/A'}\n          </div>\n        </div>\n        <div className=\"economic-overview\">\n          <h4>Economic Overview</h4>\n          <p>\n            {state.overview || \n              `${state.name}'s ${selectedIndicator === 'UNRATE' ? 'unemployment rate' : \n                selectedIndicator === 'MSPUS' ? 'housing market' : 'personal income'} \n              shows ${state.value !== null && state.value !== undefined ? \n                selectedIndicator === 'UNRATE' ? \n                  state.value < 4 ? 'strong performance' : \n                  state.value < 6 ? 'moderate performance' : 'challenges' : \n                selectedIndicator === 'MSPUS' ? \n                  state.value > 400000 ? 'high prices' : 'moderate prices' : \n                  state.value > 60000 ? 'high income levels' : 'moderate income levels' \n                : 'no data available'}.`}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"regional-data indicator-page\">\n      <h2>Regional Economic Data</h2>\n      \n      <div className=\"controls\">\n        <div className=\"selector\">\n          <label htmlFor=\"indicator-select\">Select Indicator: </label>\n          <select \n            id=\"indicator-select\" \n            value={selectedIndicator} \n            onChange={handleIndicatorChange}\n          >\n            {indicators.map(indicator => (\n              <option key={indicator.id} value={indicator.id}>\n                {indicator.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      \n      {loading ? (\n        <div className=\"loading\">Loading regional data...</div>\n      ) : error ? (\n        <div className=\"error\">{error}</div>\n      ) : (\n        <div className=\"regional-content\">\n          <div className=\"map-and-details\">\n            <div className=\"us-map-container\">\n              <ComposableMap projection=\"geoAlbersUsa\" width={800} height={500}>\n                <ZoomableGroup>\n                  <Geographies geography={geoUrl}>\n                    {({ geographies }) =>\n                      geographies.map(geo => {\n                        const stateCode = geo.properties.postal;\n                        const currentState = stateData[stateCode];\n                        const fillColor = currentState && currentState.value !== null && currentState.value !== undefined\n                          ? colorScale(currentState.value)\n                          : \"#D3D3D3\"; // Gray for no data\n                            \n                        return (\n                          <Geography\n                            key={geo.rsmKey}\n                            geography={geo}\n                            fill={fillColor}\n                            stroke=\"#FFFFFF\"\n                            strokeWidth={0.5}\n                            style={{\n                              default: {\n                                outline: \"none\"\n                              },\n                              hover: {\n                                outline: \"none\",\n                                stroke: \"#000\",\n                                strokeWidth: 1,\n                                cursor: \"pointer\"\n                              },\n                              pressed: {\n                                outline: \"none\"\n                              }\n                            }}\n                            onMouseEnter={() => handleStateMouseEnter(geo)}\n                            onMouseLeave={handleStateMouseLeave}\n                          />\n                        );\n                      })\n                    }\n                  </Geographies>\n                </ZoomableGroup>\n              </ComposableMap>\n            </div>\n            <div className=\"state-info-panel\">\n              {hoveredState ? renderStateInfo() : (\n                <div className=\"default-info\">\n                  <h3>Hover over a state to view details</h3>\n                  <p>Currently displaying: {getIndicatorName(selectedIndicator)}</p>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"legend\">\n            <h3>Legend</h3>\n            <div className=\"legend-items\">\n              {selectedIndicator === 'UNRATE' ? (\n                <>\n                  <div className=\"legend-item\">\n                    <div className=\"legend-color\" style={{ background: '#00FF00' }}></div>\n                    <span>Low Unemployment</span>\n                  </div>\n                  <div className=\"legend-item\">\n                    <div className=\"legend-color\" style={{ background: '#FF0000' }}></div>\n                    <span>High Unemployment</span>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div className=\"legend-item\">\n                    <div className=\"legend-color\" style={{ background: '#00FF00' }}></div>\n                    <span>High {selectedIndicator === 'MSPUS' ? 'Home Prices' : 'Income'}</span>\n                  </div>\n                  <div className=\"legend-item\">\n                    <div className=\"legend-color\" style={{ background: '#FF0000' }}></div>\n                    <span>Low {selectedIndicator === 'MSPUS' ? 'Home Prices' : 'Income'}</span>\n                  </div>\n                </>\n              )}\n              <div className=\"legend-item\">\n                <div className=\"legend-color\" style={{ background: '#D3D3D3' }}></div>\n                <span>No Data</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RegionalData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}